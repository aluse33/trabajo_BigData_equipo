[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "",
    "text": "Hola, somos Alejandro Lucas, Adrián Guijarro y Luis Díaz.\nEsta web sirve para presentar el trabajo en equipo para la asignatura “Programación y manejo de datos en la era Del Big Data”, optativa de GECO en la Facultad de Economía de la Universitat de València.\nLa web de la asignatura está aquí y los trabajos de mis compañeros de curso puedes verlos aquí.\nNuestro trabajo lleva por título : “Lenguajes de programación: evolución y programación en Economía”. El objetivo es mostrar la evolución del uso y de la popularidad de distintos lenguajes de programación, así como hablar de programación en Economía, mostrando un par de ejemplos de por qué saber programar es fundamental a la hora de realizar análisis económico de calidad.\nEl trabajo puede verse aquí, y las slides aquí."
  },
  {
    "objectID": "my_trabajo_BigData.html",
    "href": "my_trabajo_BigData.html",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "",
    "text": "Código#- Paquetes empleados en el trabajo:\n\nlibrary(tiobeindexr)\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(RColorBrewer)\nlibrary(ggthemes)\nlibrary(highcharter)\nlibrary(gtExtras)\nlibrary(rio)\nlibrary(tidyr)\nlibrary(here)\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(reshape2)\nlibrary(stargazer)\nlibrary(vembedr)\nlibrary(rio)"
  },
  {
    "objectID": "my_trabajo_BigData.html#intro",
    "href": "my_trabajo_BigData.html#intro",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "",
    "text": "Vamos a utilizar datos del paquete palmerpenguins. El repo del paquete en CRAN está aquí, el repo de Github está aquí y la página web del paquete está aquí.\nLos datos se pueden cargar en la memoria de de R/RStudio de esta forma:\n\nCódigo# install.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\ndf &lt;- palmerpenguins::penguins\n\n\nEl dataset contiene observaciones sobre un conjunto de 344 pingüinos de 3 especies. Hay 8 variables."
  },
  {
    "objectID": "my_trabajo_BigData.html#los-pingüinos-molan",
    "href": "my_trabajo_BigData.html#los-pingüinos-molan",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "Los pingüinos molan",
    "text": "Los pingüinos molan\nVamos a ver una foto de un pingüinos\n\n\n\n\n\n\n\n\n\n\nUn pingüino chulo\n\n\nSí, lo pingüinos molan, así que vamos a poner otra foto de pingüinos que tenemos en nuestro PC pero la vamos a poner en el margen:"
  },
  {
    "objectID": "my_trabajo_BigData.html#algunos-gráficos",
    "href": "my_trabajo_BigData.html#algunos-gráficos",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "Algunos gráficos",
    "text": "Algunos gráficos\nBueno pues vamos a hacer algún gráfico, pero claro antes he de cargar los paquetes\n\nCódigolibrary(tidyverse)\n\n\nArreglo los datos\n\nCódigo#- cojos datos de pingüinos y arreglo un poco \ndf &lt;- palmerpenguins::penguins %&gt;% \n  dplyr::select(species, bill_depth_mm, body_mass_g) %&gt;% \n  tidyr::drop_na()\n\n\n\nPrimer gráfico\n\nCódigo#- primer gráfico\np &lt;- ggplot(data = df, \n       mapping = aes(x = bill_depth_mm, y = body_mass_g, color = species)) +\n     geom_point()\np\n\n\n\n\n\n\n\nSegundo\n\nCódigo#- segundo gráfico\np &lt;- p + geom_smooth(method = \"lm\", se = FALSE) \n\np\n\n\n\n\n\n\n\nEl último\n\nCódigo#- tercer gráfico\np + geom_smooth(method = \"lm\", se = FALSE, color = \"black\") \n\n\n\n\n\n\n\n\nCon esto acabo mi trabajo para BigData!!\n\n\n\nInformación sobre la sesión\nAbajo muestro mi entorno de trabajo y paquetes utilizados\n\n\n current session info \n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Ventura 13.2.1\n system   x86_64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Madrid\n date     2023-12-14\n pandoc   2.19.2 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package        * version date (UTC) lib source\n cellranger       1.1.0   2016-07-27 [1] CRAN (R 4.3.0)\n cli              3.6.1   2023-03-23 [1] CRAN (R 4.3.0)\n clipr            0.8.0   2022-02-22 [1] CRAN (R 4.3.0)\n colorspace       2.1-0   2023-01-23 [1] CRAN (R 4.3.0)\n curl             5.2.0   2023-12-08 [1] CRAN (R 4.3.0)\n desc             1.4.2   2022-09-08 [1] CRAN (R 4.3.0)\n details          0.3.0   2022-03-27 [1] CRAN (R 4.3.0)\n digest           0.6.33  2023-07-07 [1] CRAN (R 4.3.0)\n dplyr          * 1.1.3   2023-09-03 [1] CRAN (R 4.3.0)\n evaluate         0.23    2023-11-01 [1] CRAN (R 4.3.0)\n fansi            1.0.6   2023-12-08 [1] CRAN (R 4.3.0)\n farver           2.1.1   2022-07-06 [1] CRAN (R 4.3.0)\n fastmap          1.1.1   2023-02-24 [1] CRAN (R 4.3.0)\n fontawesome      0.5.2   2023-08-19 [1] CRAN (R 4.3.0)\n forcats        * 1.0.0   2023-01-29 [1] CRAN (R 4.3.0)\n generics         0.1.3   2022-07-05 [1] CRAN (R 4.3.0)\n ggplot2        * 3.4.4   2023-10-12 [1] CRAN (R 4.3.0)\n ggthemes       * 4.2.4   2021-01-20 [1] CRAN (R 4.3.0)\n glue             1.6.2   2022-02-24 [1] CRAN (R 4.3.0)\n gt             * 0.9.0   2023-03-31 [1] CRAN (R 4.3.0)\n gtable           0.3.4   2023-08-21 [1] CRAN (R 4.3.0)\n gtExtras         0.5.0   2023-09-15 [1] CRAN (R 4.3.0)\n hms              1.1.3   2023-03-21 [1] CRAN (R 4.3.0)\n htmltools        0.5.7   2023-11-03 [1] CRAN (R 4.3.0)\n htmlwidgets      1.6.2   2023-03-17 [1] CRAN (R 4.3.0)\n httr             1.4.7   2023-08-15 [1] CRAN (R 4.3.0)\n jsonlite         1.8.8   2023-12-04 [1] CRAN (R 4.3.0)\n knitr            1.45    2023-10-30 [1] CRAN (R 4.3.0)\n labeling         0.4.3   2023-08-29 [1] CRAN (R 4.3.0)\n lattice          0.21-8  2023-04-05 [1] CRAN (R 4.3.1)\n lifecycle        1.0.4   2023-11-07 [1] CRAN (R 4.3.0)\n lubridate      * 1.9.2   2023-02-10 [1] CRAN (R 4.3.0)\n magrittr         2.0.3   2022-03-30 [1] CRAN (R 4.3.0)\n Matrix           1.6-1   2023-08-14 [1] CRAN (R 4.3.0)\n mgcv             1.8-42  2023-03-02 [1] CRAN (R 4.3.1)\n munsell          0.5.0   2018-06-12 [1] CRAN (R 4.3.0)\n nlme             3.1-162 2023-01-31 [1] CRAN (R 4.3.1)\n paletteer        1.5.0   2022-10-19 [1] CRAN (R 4.3.0)\n palmerpenguins   0.1.1   2022-08-15 [1] CRAN (R 4.3.0)\n pillar           1.9.0   2023-03-22 [1] CRAN (R 4.3.0)\n pkgconfig        2.0.3   2019-09-22 [1] CRAN (R 4.3.0)\n png              0.1-8   2022-11-29 [1] CRAN (R 4.3.0)\n purrr          * 1.0.2   2023-08-10 [1] CRAN (R 4.3.0)\n R6               2.5.1   2021-08-19 [1] CRAN (R 4.3.0)\n RColorBrewer   * 1.1-3   2022-04-03 [1] CRAN (R 4.3.0)\n readr          * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)\n readxl         * 1.4.3   2023-07-06 [1] CRAN (R 4.3.0)\n rematch2         2.1.2   2020-05-01 [1] CRAN (R 4.3.0)\n rlang            1.1.2   2023-11-04 [1] CRAN (R 4.3.0)\n rmarkdown        2.25    2023-09-18 [1] CRAN (R 4.3.0)\n rprojroot        2.0.3   2022-04-02 [1] CRAN (R 4.3.0)\n rstudioapi       0.15.0  2023-07-07 [1] CRAN (R 4.3.0)\n rvest            1.0.3   2022-08-19 [1] CRAN (R 4.3.0)\n sass             0.4.7   2023-07-15 [1] CRAN (R 4.3.0)\n scales           1.3.0   2023-11-28 [1] CRAN (R 4.3.0)\n sessioninfo      1.2.2   2021-12-06 [1] CRAN (R 4.3.0)\n stringi          1.8.2   2023-11-23 [1] CRAN (R 4.3.0)\n stringr        * 1.5.1   2023-11-14 [1] CRAN (R 4.3.0)\n tibble         * 3.2.1   2023-03-20 [1] CRAN (R 4.3.0)\n tidyr          * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)\n tidyselect       1.2.0   2022-10-10 [1] CRAN (R 4.3.0)\n tidyverse      * 2.0.0   2023-02-22 [1] CRAN (R 4.3.0)\n timechange       0.2.0   2023-01-11 [1] CRAN (R 4.3.0)\n tiobeindexr    * 0.1.1   2023-12-08 [1] Github (amrrs/tiobeindexr@f325f51)\n tzdb             0.4.0   2023-05-12 [1] CRAN (R 4.3.0)\n utf8             1.2.4   2023-10-22 [1] CRAN (R 4.3.0)\n vctrs            0.6.5   2023-12-01 [1] CRAN (R 4.3.0)\n withr            2.5.2   2023-10-30 [1] CRAN (R 4.3.0)\n xfun             0.41    2023-11-01 [1] CRAN (R 4.3.0)\n xml2             1.3.6   2023-12-04 [1] CRAN (R 4.3.0)\n yaml             2.3.7   2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "my_slides_BigData.html#intro",
    "href": "my_slides_BigData.html#intro",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "0. Intro",
    "text": "0. Intro\nEn este trabajo hemos realizado un seguimiento de los aspectos determinantes en la adopción de disitintos lenguajes de programación(popularidad, salarios, lenguajes más utilizados por jóvenes,etc.), así como un estudio sobre la aplicación de la programación para la Economía.  Esto último es fundamental para poner en práctica los conocimientos adquiridos a lo largo del grado y contrastar las teorías y modelos estudiados con la evidencia empírica."
  },
  {
    "objectID": "my_slides_BigData.html#los-pingüinos-molan",
    "href": "my_slides_BigData.html#los-pingüinos-molan",
    "title": "Los pingüinos molan",
    "section": "Los pingüinos molan",
    "text": "Los pingüinos molan\nVamos a ver una foto de un pingüinos\n\nUn pingüino chulo"
  },
  {
    "objectID": "my_slides_BigData.html#algunos-gráficos",
    "href": "my_slides_BigData.html#algunos-gráficos",
    "title": "Los pingüinos molan",
    "section": "Algunos gráficos",
    "text": "Algunos gráficos\nBueno pues vamos a hacer algún gráfico, pero claro antes he de cargar los paquetes\n\nlibrary(tidyverse)\n\nArreglo los datos\n\n#- cojos datos de pingüinos y arreglo un poco \ndf &lt;- palmerpenguins::penguins %&gt;% \n  dplyr::select(species, bill_depth_mm, body_mass_g) %&gt;% \n  tidyr::drop_na()"
  },
  {
    "objectID": "my_trabajo_BigData.html#introducción",
    "href": "my_trabajo_BigData.html#introducción",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "Introducción",
    "text": "Introducción\nEl objetivo del presente trabajo es hacer una revisión sobre la evolución de la popularidad que tiene, en la actualidad, cada uno de los más famosos lenguajes de programación; asimismo, queremos hablar sobre la programación en Economía, mostrando por qué es fundamental manejar con cierta soltura un lenguaje (o más, preferiblemente), si uno busca ser un buen economista. Al final, esta es una asignatura única en el plan de estudios, que no solo sirve para darle una cantidad ingente de trabajo al profe o para que nosotros podamos evitar estudiar Sistema Tributario o Economía Ambiental, sino para que podamos sintetizar en un análisis riguroso y reproducible todas esas teorías económicas (y sus respectivos modelos) que estudiamos a lo largo del grado.\nPrimeramente, para estudiar la popularidad de los distintos lenguajes emplearemos el package tiobeindexr, el repo del paquete en CRAN está aquí, mientras que el repo del paquete en Github está aquí."
  },
  {
    "objectID": "my_trabajo_BigData.html#top-20-lenguajes-más-populares-actualmente",
    "href": "my_trabajo_BigData.html#top-20-lenguajes-más-populares-actualmente",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "Top 20 lenguajes más populares actualmente",
    "text": "Top 20 lenguajes más populares actualmente\nPodemos analizar cuáles son los lenguajes de programación más populares a diciembre de 2023, es decir, justo ahora:\n\nCódigolibrary(tiobeindexr)\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(RColorBrewer)\n\ndf &lt;- top_20()\ndf &lt;-  df %&gt;% select(1,4,5)\ndf &lt;- df %&gt;%\n  mutate(porcentaje_numeric = ifelse(str_detect(Ratings, \"%\"),\n                                     as.numeric(str_remove(Ratings, \"%\")),\n                                     as.numeric(Ratings))) %&gt;%\n  rename(cuota = porcentaje_numeric) %&gt;%\n  select(1,2,4)\n\n## ESTO  ES LA TABLA BUENA\n\ncolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\", \"#95a5a6\")\n\ndf_logos &lt;- data.frame(lenguaje = c(\"Python\", \"C\", \"C++\", \"Java\", \"C#\", \"JavaScript\", \"PHP\", \"Visual Basic\", \"SQL\", \"Assembly language\", \"Scratch\", \"Fortran\", \"Go\", \"MATLAB\", \"Kotlin\", \"Delphi/Object Pascal\", \"Swift\",\"Ruby\",\"R\",\"Rust\"),\n                       logo = c(\"https://tse4.mm.bing.net/th?id=OIP.EDJ9xoErBbZqK2tExVoJfAAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&pid=Api&rs=1&c=1&qlt=95&w=103&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.ggb-3B-8LRfbgS0lPLYNxwHaIU&pid=Api&rs=1&c=1&qlt=95&w=105&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.dJ7A1hPb-BDRBrhOmhrVAgHaHa&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.2x1yN8k3MVCrkJFR_C5k-wHaIp&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.YPYdVAg5ieRspLI6HIpmDQHaIB&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.pkqphAig1t-PCsy4dkVrfAHaD5&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.Y224uoZnCs8yY0Sos_h4cQHaDd&pid=Api&rs=1&c=1&qlt=95&w=258&h=120\",\"https://tse4.mm.bing.net/th?id=OIP.S_9pgiKacbi3FxPKxDmusgHaFy&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.v5m2HW3FI3RbopnK8Cs6HgAAAA&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.bHt6sdtkwUqP91oPKlruGgHaEM&pid=Api&P=0&h=180\",\"https://tse2.explicit.bing.net/th?id=OIP.tLfIejOZiP_H0Zse0NIn2QAAAA&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.cI8KflTKlnmraGFa22XpKQHaEK&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.gW_YaXsZmuSntd_sy5zkIwHaHa&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.hEP7hOlvIzhKU1fGpizd7QAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.XozeB5BRQSzNCO6k7om62QHaHa&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.2BwE10YiTSXRrnW2LnVh8wHaHa&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.0rg-o4mEzLO5EHJ1zS52YwHaGe&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.YmPfYoQK3WvGEjFXusKV9QHaHa&pid=Api&P=0&h=180\"))\n\ndf_final &lt;- left_join(df, df_logos, by = c(`Programming Language` = \"lenguaje\"))\ndf_final &lt;- df_final %&gt;% mutate(Logo = logo, .after = `Programming Language`)\ndf_final &lt;- df_final %&gt;% select(-5)\n\nminimal_table_prueba &lt;- gt(df_final) %&gt;% \n  gtExtras::gt_plt_dot(column = cuota, category_column = `Programming Language`,  max_value = NULL, palette = colores ) %&gt;% \n  gtExtras::gt_theme_nytimes() %&gt;% \n  tab_header(title = \"Lenguajes de programación más populares\",\n             subtitle = \"Según el índice TIOBE.\") %&gt;% \n  cols_width(`Programming Language` ~ px(368), 3 ~ px(30)) %&gt;%\n  gtExtras::gt_img_rows(columns = Logo, img_source = 'web')\n\nminimal_table_prueba\n\n\n\n\n\n\n\n\n\n\n\n\n\nLenguajes de programación más populares\n    \n\nSegún el índice TIOBE.\n    \n\nDec 2023\n      Programming Language\n      Logo\n      cuota\n    \n\n\n\n1\n\n  \n    Python\n    \n    \n  \n  \n    \n  \n\n\n13.86\n\n\n2\n\n  \n    C\n    \n    \n  \n  \n    \n  \n\n\n11.44\n\n\n3\n\n  \n    C++\n    \n    \n  \n  \n    \n  \n\n\n10.01\n\n\n4\n\n  \n    Java\n    \n    \n  \n  \n    \n  \n\n\n7.99\n\n\n5\n\n  \n    C#\n    \n    \n  \n  \n    \n  \n\n\n7.30\n\n\n6\n\n  \n    JavaScript\n    \n    \n  \n  \n    \n  \n\n\n2.90\n\n\n7\n\n  \n    PHP\n    \n    \n  \n  \n    \n  \n\n\n2.01\n\n\n8\n\n  \n    Visual Basic\n    \n    \n  \n  \n    \n  \n\n\n1.82\n\n\n9\n\n  \n    SQL\n    \n    \n  \n  \n    \n  \n\n\n1.61\n\n\n10\n\n  \n    Assembly language\n    \n    \n  \n  \n    \n  \n\n\n1.11\n\n\n11\n\n  \n    Scratch\n    \n    \n  \n  \n    \n  \n\n\n1.08\n\n\n12\n\n  \n    Fortran\n    \n    \n  \n  \n    \n  \n\n\n1.07\n\n\n13\n\n  \n    Go\n    \n    \n  \n  \n    \n  \n\n\n1.03\n\n\n14\n\n  \n    MATLAB\n    \n    \n  \n  \n    \n  \n\n\n0.93\n\n\n15\n\n  \n    Kotlin\n    \n    \n  \n  \n    \n  \n\n\n0.92\n\n\n16\n\n  \n    Delphi/Object Pascal\n    \n    \n  \n  \n    \n  \n\n\n0.92\n\n\n17\n\n  \n    Swift\n    \n    \n  \n  \n    \n  \n\n\n0.82\n\n\n18\n\n  \n    Rust\n    \n    \n  \n  \n    \n  \n\n\n0.80\n\n\n19\n\n  \n    Ruby\n    \n    \n  \n  \n    \n  \n\n\n0.77\n\n\n20\n\n  \n    R\n    \n    \n  \n  \n    \n  \n\n\n0.72\n\n\n\n\n\n\nEl dataset contiene observaciones sobre un conjunto de 20 pingüinos de 3 especies. Hay 3 variables."
  },
  {
    "objectID": "my_trabajo_BigData.html#paper-villaverde",
    "href": "my_trabajo_BigData.html#paper-villaverde",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "Paper Villaverde",
    "text": "Paper Villaverde\n\n\n\n\n\n\n\n\n\nSí, lo pingüinos molan, así que vamos a poner otra foto de pingüinos que tenemos en nuestro PC pero la vamos a poner en el margen:"
  },
  {
    "objectID": "my_trabajo_BigData.html#estimando-un-modelo-estocástico-neoclásico-de-crecimiento.",
    "href": "my_trabajo_BigData.html#estimando-un-modelo-estocástico-neoclásico-de-crecimiento.",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "Estimando un modelo estocástico neoclásico de crecimiento.",
    "text": "Estimando un modelo estocástico neoclásico de crecimiento.\nPara analizar la velocidad de computación de diferentes lenguajes de programación en Economía podemos estimar un mismo modelo en varios lenguajes y comprobar el desempeño de cada uno de ellos; esto, evidentemente, no se nos ha ocurrido a nosotros, de hecho, un economista que ha trabajado bastante con estas cosas es Jesús Fernández-Villaverde, nosotros los que hemos hecho es seleccionar uno de sus papers2 para poder comparar la velocidad de computación de un modelo estocástico neoclásico de crecimiento. Antes de dar los resultados, vamos a explicar brevemente en que consiste el modelo y por qué es una tarea ciertamente demandante en términos de computación. Tranquilos, no entraremos en detalles y se podrá entender bien la idea general, quien quiera se puede leer el paper, nosotros solo explicaremos lo básico.\nEs cierto que el modelo mola bastante (no es broma), básicamente porque es una síntesis de como se hace macroeconomía actualmente: iterando funciones. Tanto es así, que el propio Villaverde escribe en el asbtract del paper que es “the workhorse of modern macroeconomics”, y bueno, si lo dice él, será verdad (recordemos que es un tipo bastante listo, o eso parece, al menos). La idea del modelo es bastante sencilla de entender: un planificador social tiene que maximizar un función de valor escogiendo una combinación de consumo \\(c_t\\) y capital \\(k_t\\). La función se maximizará cuando se alcance el valor óptimo de capital futuro:\n\\[\\max_{\\{c_t, k_t+1\\}}\\mathbb{E}_0\\sum_{t=0}^{\\infty}(1 - \\beta)\\beta^t\\log c_t\\] La \\(\\mathbb{E}\\) es el operador de expectativas, mientras que el parámetro \\(\\beta\\) simplemente es un factor de descuento temporal, ahora bien, esta función está sujeta a la siguiente restricción de recursos: \\[c_t + k_{t+1} = z_tk_{t}^\\alpha + (1 - \\delta)k_t\\] Dos apuntes más y terminamos (prometido): \\(z_t\\) es la productividad, y sus valores se situarán en un intervalo de puntos discretos \\(\\{z_1,..., z_n\\}\\) que evolucionan de acuerdo a una matriz de transición de Markov \\(\\prod\\). Después de unos ajustes y de calibrar los parámetros, formulamos el problema de maximización de manera recursiva en términos de la función de valor \\(V(.,.)\\) con un operador de Bellman, de manera que finalmente tenemos el problema que nuestro ordenador tendrá que resolver: \\[V(k,z) = \\max_{k'}(1 - \\beta)\\beta^t\\log(zk^\\alpha-k')+\\beta\\mathbb{E}[V(k',z')|z]\\] El problema es ciertamente demandante, para que la función converga a su valor óptimo se han realizado (en todos los lenguajes) 257 iteraciones, usando 17.820 puntos para \\(k\\) uniformemente distribuidos en torno al 50 por ciento del valor en estado estacionario del capital \\(k\\). Los puntos de \\(k\\) se han escogido de manera que en C++y Fortran pueda resolverse el problema en, más o menos, un segundo.\n\n\nCódigo\nGráfico\n\n\n\n\nCódigoex_times &lt;- readxl::read_excel(\"./datos/execution_times.xlsx\") #-importamos la tabla del pdf del paper a una hoja de cálculo, la cargamos, y ya trabajamos con ella en R\n\nex_times &lt;- ex_times %&gt;%  \n  select(1, 4) %&gt;% \n  na.omit() \n\ncolnames(ex_times) &lt;- c(\"Lenguajes\", \"times\")\nex_times &lt;- ex_times[2:9,] \n\nex_times &lt;- ex_times %&gt;% \n  mutate(times = parse_number(times))\n\nex_times &lt;- ex_times %&gt;%\n  mutate(category = case_when(\n    as.numeric(times) &lt; 3 ~ \"Menos de 3 seg\",\n    as.numeric(times) &gt;= 3 & as.numeric(times) &lt; 60 ~ \"Entre 3 y 60 seg\",\n    as.numeric(times) &gt;= 60 ~ \"Más de 60 seg\",\n    TRUE ~ NA_character_)) \n\nex_times$factor_cat &lt;- as.factor(ex_times$category)\norden_correcto &lt;- c(\"Menos de 3 seg\", \"Entre 3 y 60 seg\", \"Más de 60 seg\")\nex_times$factor_cat &lt;- factor(ex_times$category, levels = orden_correcto)\n\nex_times_plot &lt;- ex_times %&gt;% \n  ggplot() +\n  aes(x = Lenguajes, y = times, fill = Lenguajes)  +\n  geom_bar(stat = \"identity\") +\n  facet_wrap(~factor_cat, scales = \"free\") +\n  theme_stata(scheme = \"s1color\") +\n  labs(title = \"Tiempos de ejecución del modelo\", x = \"\", y = \"Tiempo en segundos\")\n\n\n\n\n\nCódigoex_times_plot\n\n\n\n\n\n\n\n\n\n\nEn el paper ejecutan el modelo en todos los lenguajes en dos ordenadores: un Mac y un Windows, además de usar diferentes compiladores; para no entrar en detalles técncos, escogemos el compilador de cada lenguaje que más rápido ejecuta el código y, además, seleccionamos los tiempos de ejecución del Mac, básicamente porque un servidor está usando uno ahora mismo y porque los tiempos no cambian demasiado, a excepción de: Fortran, que tarda el doble (dos segundos en lugar de uno), R que tarda unos 40 segundos menos y Mathematica que tarda casi 200 segundos menos.\nLo primero que observamos es que los lenguajes que mejor desempeño presentan (menos de 3 segundos en ejecutarse) son los compilados, junto a Julia, que es interpretado. El caso de Julia es interesante, su sintáxis es muy similar a la de Matlab, usa un compilador JIT que lo hace bastante rápido (entre otras características bastante guais que tiene), puede llamar a funciones de C o de Fortran sin necesidad de usar APIs y, bueno, es gratis, Matlab no (además los años ya le pasan factura y su interfaz está desfasada, por otro lado pensemos que Julia nació en 2012). Después, tenemos a Matlab, que tarda unos 10 segundos en ejecutarse, y a Python, que tarda algo más de 40 segundos. Dejando de lado que Mathematica es el último (y con diferencia) y que no me interesa hablar de él porque una vez lo usé y (casi) me tocó venderle mi alma al diablo para hacer una gráfica bastante sencilla, podemos centrarnos en R.\nSi usamos el R compiler package sigue siendo 200 veces más lento que el lenguaje más rápido (en el peor de los casos lo sería casi 500 veces), esto tiene una explicación y hemos de ser comprensivos, el diseño original de R (de los años 90) y determinadas decisiones (de las que no tengo mucha idea) que se tomaron en ese momento, junto a la éxito inesperado que ha terminado teniendo en la actualidad, pueden dificultar según qué tareas. Pero bueno, tampoco pasa nada, la realidad es que nadie más que cuatro frikis usan R para resolver este tipo de modelos, de hecho, hasta hace aproximadamente una semana y tres días (es broma, hasta septiembre de este mismo año), ni siquiera se podían estimar modelos de equilibrio general en R como se haría en el resto de lenguajes, ahora tenemos el paquete DynareR que nos facilita muuuucho la tarea, de hecho, está ideado específicamente para resolver modelos DSGE (dynamic stochastic general equilibrium) y OLG (overlapping generations), habrá que ver que pasa en un futuro. Como iba diciendo, nadie usa R para estas cosas, donde realmente brilla es en estadística y econometría (ahora tocaremos este tema), ya que, solamente en el repositorio CRAN, hay casi 20.000 paquetes diferentes para estas dos áreas.\nEn suma, el bilingüismo, al menos en lo que a programación en Economía se refiere, es altamente recomendable, fundamentalmente porque las ventajas a la hora de realizar determinadas tareas son enormes en lenguaje respecto a otro, asimismo, los lenguajes evolucionan, lo que hoy se usa puede que mañana no, y lo que no se usa, posiblemente mañana sí. La cuestión es ser conscientes de que cada lenguaje es una herramienta diferente y cuantas más herramientas tengamos, mejor podremos solucionar los problemas que nos vayamos encontrando en nuestro camino como economistas."
  },
  {
    "objectID": "my_trabajo_BigData.html#footnotes",
    "href": "my_trabajo_BigData.html#footnotes",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "Notas",
    "text": "Notas\n\nEn el gráfico se representa la posición promedio para el periódo de 12 meses↩︎\n“Aruoba, S. B., & Fernández-Villaverde, J. (2015). A comparison of programming languages in macroeconomics. Journal of Economic Dynamics and Control, 58, 265-273.”↩︎"
  },
  {
    "objectID": "my_trabajo_BigData.html#top-20-lenguajes-más-populares-a-día-de-hoy",
    "href": "my_trabajo_BigData.html#top-20-lenguajes-más-populares-a-día-de-hoy",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "Top 20 lenguajes más populares a día de hoy",
    "text": "Top 20 lenguajes más populares a día de hoy\nPodemos analizar cuáles son los lenguajes de programación más populares a diciembre de 2023, es decir, justo ahora:\n\nCódigolibrary(tiobeindexr)\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(RColorBrewer)\n\ndf &lt;- top_20()\ndf &lt;-  df %&gt;% select(1,4,5)\ndf &lt;- df %&gt;%\n  mutate(porcentaje_numeric = ifelse(str_detect(Ratings, \"%\"),\n                                     as.numeric(str_remove(Ratings, \"%\")),\n                                     as.numeric(Ratings))) %&gt;%\n  rename(cuota = porcentaje_numeric) %&gt;%\n  select(1,2,4)\n\n## ESTO  ES LA TABLA BUENA\n\ncolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\", \"#95a5a6\")\n\ndf_logos &lt;- data.frame(lenguaje = c(\"Python\", \"C\", \"C++\", \"Java\", \"C#\", \"JavaScript\", \"PHP\", \"Visual Basic\", \"SQL\", \"Assembly language\", \"Scratch\", \"Fortran\", \"Go\", \"MATLAB\", \"Kotlin\", \"Delphi/Object Pascal\", \"Swift\",\"Ruby\",\"R\",\"Rust\"),\n                       logo = c(\"https://tse4.mm.bing.net/th?id=OIP.EDJ9xoErBbZqK2tExVoJfAAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&pid=Api&rs=1&c=1&qlt=95&w=103&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.ggb-3B-8LRfbgS0lPLYNxwHaIU&pid=Api&rs=1&c=1&qlt=95&w=105&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.dJ7A1hPb-BDRBrhOmhrVAgHaHa&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.2x1yN8k3MVCrkJFR_C5k-wHaIp&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.YPYdVAg5ieRspLI6HIpmDQHaIB&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.pkqphAig1t-PCsy4dkVrfAHaD5&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.Y224uoZnCs8yY0Sos_h4cQHaDd&pid=Api&rs=1&c=1&qlt=95&w=258&h=120\",\"https://tse4.mm.bing.net/th?id=OIP.S_9pgiKacbi3FxPKxDmusgHaFy&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.v5m2HW3FI3RbopnK8Cs6HgAAAA&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.bHt6sdtkwUqP91oPKlruGgHaEM&pid=Api&P=0&h=180\",\"https://tse2.explicit.bing.net/th?id=OIP.tLfIejOZiP_H0Zse0NIn2QAAAA&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.cI8KflTKlnmraGFa22XpKQHaEK&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.gW_YaXsZmuSntd_sy5zkIwHaHa&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.hEP7hOlvIzhKU1fGpizd7QAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.XozeB5BRQSzNCO6k7om62QHaHa&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.2BwE10YiTSXRrnW2LnVh8wHaHa&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.0rg-o4mEzLO5EHJ1zS52YwHaGe&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.YmPfYoQK3WvGEjFXusKV9QHaHa&pid=Api&P=0&h=180\"))\n\ndf_final &lt;- left_join(df, df_logos, by = c(`Programming Language` = \"lenguaje\"))\ndf_final &lt;- df_final %&gt;% mutate(Logo = logo, .after = `Programming Language`)\ndf_final &lt;- df_final %&gt;% select(-5)\n\nminimal_table_prueba &lt;- gt(df_final) %&gt;% \n  gtExtras::gt_plt_dot(column = cuota, category_column = `Programming Language`,  max_value = NULL, palette = colores ) %&gt;% \n  gtExtras::gt_theme_nytimes() %&gt;% \n  tab_header(title = \"Lenguajes de programación más populares\",\n             subtitle = \"Según el índice TIOBE.\") %&gt;% \n  cols_width(`Programming Language` ~ px(368), 3 ~ px(30)) %&gt;%\n  gtExtras::gt_img_rows(columns = Logo, img_source = 'web')\n\nminimal_table_prueba\n\n\n\n\n\n\n\n\n\n\n\n\n\nLenguajes de programación más populares\n    \n\nSegún el índice TIOBE.\n    \n\nDec 2023\n      Programming Language\n      Logo\n      cuota\n    \n\n\n\n1\n\n  \n    Python\n    \n    \n  \n  \n    \n  \n\n\n13.86\n\n\n2\n\n  \n    C\n    \n    \n  \n  \n    \n  \n\n\n11.44\n\n\n3\n\n  \n    C++\n    \n    \n  \n  \n    \n  \n\n\n10.01\n\n\n4\n\n  \n    Java\n    \n    \n  \n  \n    \n  \n\n\n7.99\n\n\n5\n\n  \n    C#\n    \n    \n  \n  \n    \n  \n\n\n7.30\n\n\n6\n\n  \n    JavaScript\n    \n    \n  \n  \n    \n  \n\n\n2.90\n\n\n7\n\n  \n    PHP\n    \n    \n  \n  \n    \n  \n\n\n2.01\n\n\n8\n\n  \n    Visual Basic\n    \n    \n  \n  \n    \n  \n\n\n1.82\n\n\n9\n\n  \n    SQL\n    \n    \n  \n  \n    \n  \n\n\n1.61\n\n\n10\n\n  \n    Assembly language\n    \n    \n  \n  \n    \n  \n\n\n1.11\n\n\n11\n\n  \n    Scratch\n    \n    \n  \n  \n    \n  \n\n\n1.08\n\n\n12\n\n  \n    Fortran\n    \n    \n  \n  \n    \n  \n\n\n1.07\n\n\n13\n\n  \n    Go\n    \n    \n  \n  \n    \n  \n\n\n1.03\n\n\n14\n\n  \n    MATLAB\n    \n    \n  \n  \n    \n  \n\n\n0.93\n\n\n15\n\n  \n    Kotlin\n    \n    \n  \n  \n    \n  \n\n\n0.92\n\n\n16\n\n  \n    Delphi/Object Pascal\n    \n    \n  \n  \n    \n  \n\n\n0.92\n\n\n17\n\n  \n    Swift\n    \n    \n  \n  \n    \n  \n\n\n0.82\n\n\n18\n\n  \n    Rust\n    \n    \n  \n  \n    \n  \n\n\n0.80\n\n\n19\n\n  \n    Ruby\n    \n    \n  \n  \n    \n  \n\n\n0.77\n\n\n20\n\n  \n    R\n    \n    \n  \n  \n    \n  \n\n\n0.72"
  },
  {
    "objectID": "my_trabajo_BigData.html#una-miqueta-de-econometría",
    "href": "my_trabajo_BigData.html#una-miqueta-de-econometría",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "Una miqueta de Econometría",
    "text": "Una miqueta de Econometría\nUna vez hemos analizado como se comportan los diferentes lenguajes, podemos hacer un (mini) análisis con R, al final, R está diseñado para ser la herramienta excelente a la hora de hacer estadística y econometría, entre otras cosas. Esta vez haremos algo un poquito más manejable que el modelo de antes, vamos a estimar la función de producción Cobb-Douglas en el caso de España. Vamos a usar los datos de las Penn World Table, y con eso, hacemos una regresión por MCO. Esto, a parte de ser cutre, evidentemente generará problemas, nosotros nos vamos a centrarnos en analizar el problema de autocorrelación, el lector debería saber que es esto (Pedro, sabemos de sobra que tú ya lo sabes, no te ofendas por la explicación) y yo no debería explicarlo, pero como nunca se sabe, haremos un repaso rápido.\nCuando estimamos los parámetros de un modelo por minímos cuadrados ordinarios buscamos que nuestros estimadores cumplan unas características básicas, si se cumplen, nuestro estimador será ELIO (estimador lineal insesgado óptimo), o BLUE, por sus siglas en inglés. Ahora bien, entre los miles de millones de problemas que podemos tener a la hora de estimar un modelo por MCO, hay uno en concreto que puede tocarnos las pelotas la moral como no lo tratemos adecuadamente, y este es la autocorrelación. Básicamente, nuestro modelo presentará autocorrelación cuando los residuos guarden algún tipo de patrón entre ellos, y por movidas matemáticas y estadísticas varias, esto hará que nuestro estimador no sea óptimo.\nNuestro objetivo es doble: mostraros una manera un poco de andar por casa para detectar la autocorrelación y, de manera breve, como se puede hacer Econometría con R de manera sencilla y sin morir en el intento.\nLo primero de todo es coger los datos, moldearlos para que estén en un formato amigable y estimar el siguiente modelo: \\[\\ln(PIB_t) = \\beta_1 + \\beta_2\\ln(L) + \\beta_3\\ln(K) + u_t\\] Algún lector avispado ya sabrá el significado de la \\(L\\) y de la \\(K\\), a parte de eso, como ya hemos explicado lo básico de MCO y de autocorrelación, la explicación de por qué pasamos las variables a logaritmos no va a estar presente (en serio, si hace falta explicar eso, ya no tenéis opciones de salvación, solamente os podéis arrepentir de vuestros pecados, it’s over for you💀💀):\n\nCódigo#Modelo econométrico ----------\n\ndf &lt;- read.csv(\"./datos/FebPwtExport12152023.csv\")\n#- pasamos los datos a formato wide\ndf &lt;- dcast(df, RegionCode + YearCode ~ VariableCode, value.var = \"AggValue\")\n#- cambiamos el nombre a uno más familiar y creamos la variable trabajo y filtramos los datos a partir del 78\ndf &lt;- df %&gt;% \n  mutate(l = avh*emp) %&gt;% \n  rename(k = rnna,\n         pib = rgdpna,\n         year = YearCode) %&gt;% \n  filter(year &gt;= 1960)\n\nmodelo &lt;- lm(log(pib) ~ log(l) + log(k), data = df)\n#- stargazer(modelo, type = \"html\")\n\n\n\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nlog(pib)\n\n\n\n\n\n\n\n\nlog(l)\n\n\n0.212***\n\n\n\n\n\n\n(0.041)\n\n\n\n\n\n\n\n\n\n\nlog(k)\n\n\n0.747***\n\n\n\n\n\n\n(0.008)\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n0.112\n\n\n\n\n\n\n(0.372)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n60\n\n\n\n\nR2\n\n\n0.995\n\n\n\n\nAdjusted R2\n\n\n0.995\n\n\n\n\nResidual Std. Error\n\n\n0.038 (df = 57)\n\n\n\n\nF Statistic\n\n\n5,635.315*** (df = 2; 57)\n\n\n\n\n\n\n\n\nNote:\n\n\np&lt;0.1; p&lt;0.05; p&lt;0.01\n\n\n\nUna vez tenemos el modelo estimado y, habiéndonos saltado cualquier tipo de interpretación estadística de los datos (seamos realistas, no es el momento para ponernos a hacer estas cosas, aquí se nos valora por programar), podemos pasar a detectar la autocorrelación.\nVamos a hacerlo de manera gráfica, y una vez veamos indicios de no autocorrelación, autocorrelación positiva, o autocorrelación negativa, vamos a estimar el parámetro que usamos para medirla, que como sabréis, es \\(\\rho\\), en nuestro caso será \\(\\rho_1\\).\nPrimero, podemos plottear la dispersión de los residuos con sus valores rezagados:\n\n\nCódigo\nGráfico\n\n\n\n\nCódigodf_residuos &lt;- data.frame(x = lag(resid(modelo)), y = resid(modelo)) %&gt;% \n  na.omit()\n\nautocorrelacion &lt;- df_residuos %&gt;% \n  ggplot() +\n  geom_point(color = \"red\") +\n  aes(x = x, y = y) +\n  labs(title = \"Dispersión de los residuos del modelo\", \n       x = \"Residuos rezagados\",\n       y = \"Residuos\") +\n  theme_clean() + \n  geom_smooth(se = FALSE, method = lm)\n#- autocorrelacion\n\n\n\n\n\nCódigoautocorrelacion\n\n\n\n\n\n\n\n\n\n\nVemos que, evidentemente, existe autocorrelación positiva, cuando una varibale crece, la otra también lo hace. Sabiendo esto, también podemos plottear los residuos en una serie temporal para detectar patrones:\n\n\nCódigo\nGráfico\n\n\n\n\nCódigoautocorrelación_plot &lt;- df %&gt;% \n  ggplot() + \n  geom_point(color = \"#5D8AA8\") +\n  geom_line(color = \"#69b3a2\") +\n  aes(x = year, y = resid(modelo)) +\n  labs(title = \"Residuos del modelo\", \n       x = \"Año\",\n       y = \"Residuos\") +\n  geom_hline(yintercept = 0, color = \"orange\", size=.5) +\n  theme_classic()\n#- autocorrelación_plot  \n\n\n\n\n\nCódigoautocorrelación_plot  \n\n\n\n\n\n\n\n\n\n\nVemos que el modelo muestra patrones en los residuos que se presentan regularmente a lo largo de determinados intervalos de tiempo. Cuando los intervalos de tiempo en los que se da este patrón son de una duración notable, observamos indicios de que la autocorrelación es positiva, pues si el valor del residuo es alto en un momento dado, es muy probable que también sea alto en el momento posterior.\nTeniendo pruebas suficientes del carácter de la autocorrleación, finalmente, de manera un poco rudimentaria e improvisada (sin usar el test Durbin Watson, el Llung-Box o alguno de los varios que hay), podemos estimar el valor del coeficiente de autocorreelación \\(\\rho_1\\), sabiendo, eso sí, que será un número entre 0 y 1. Básicamente, calculamos una regresión usando como regeresor los residuos rezagados del modelo, mientras que la variable explicada serán los residuos (a secas). En el código especificamos que no queremos intercepto y, teóricamente, deberíamos tener el valor estimado del coeficiente de autocorrelación.\n\nCódigorho &lt;- lm(resid(modelo) ~ lag(resid(modelo))-1)\nrho &lt;- as.numeric(rho$coefficients)\nrho\n#&gt; [1] 0.7641839\n\n\nPodemos comprobar rápidamente que el valor estimado de \\(\\rho_1=0.7641839\\) es consistente con los dos análisis gráficos que hemos hecho previamente sobre los residuos, por lo que la conclusión será la misma: autocorrelación positiva y estimación no óptima, nuestros estimadores MCO no serán BLUE. Pero no pasa nada, el profe podrá proponer un modelo alternativo que no tenga este problema, mientras tanto, yo dejo por aquí esta canción, que sí que es blue 😉."
  },
  {
    "objectID": "my_trabajo_BigData.html#análisis-del-índice-tiobe",
    "href": "my_trabajo_BigData.html#análisis-del-índice-tiobe",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "Análisis del Índice TIOBE",
    "text": "Análisis del Índice TIOBE\nEl índice de la Comunidad de Programación de TIOBE es un indicador de la popularidad de los lenguajes de programación, el cuál es actualizado una vez al mes. Para calcular los ratings se basan en el número de búsquedas en motores de busqueda populares(Google, Yahoo, Wikipedia, Youtube, etc) que incluyen el nombre de cada lenguaje de programación. Un aspecto que cabe resaltar es que el índice TIOBE no nos muestra cual es el mejor lenguaje de programación del mundo, ni siquiera cual es el lenguaje en el que se han escrito más líneas de codigo, pero si que nos ofrece información acerca de si nuestras skills como programadores están actualizadas, o por el contrario, si debemos empezar a adoptar algún nuevo lenguaje.\nUna cosa que debemos matizar es que, debido a que hemos empleado el paquete tiobeindexr, que se actualiza periódicamente, los resultados pueden cambiar (y seguramente hayan cambiado) en el momento en el que el lector esté leyendo esto, por lo que si decide descargarse el repo de nuestro trabajo y correr el código, los resultados pueden variar respecto a los que se pueden ver en esta web.\nDicho esto, podemos empezar el análisis. Actualmente el lenguaje de programación mas popular es Python, seguido de C y C++. Un detalle importante es que el top 5 de lenguajes (Python, C, C++, Java, C#) acapara el 50% de la popularidad en el mundo de la programación. Esto quiere decir que tan solo 5 lenguajes tienen la misma popularidad que los 45 restantes que conforman el indice TIOBE(realmente está compuesto por 50 lenguajes pero solo hemos representado los 20 más importantes).\nNuestro querido R se sitúa en la posición 20 y aunque parezca desolador, R está compitiendo en este índice contra otros lenguajes que son utilizados para otras funciones totalmente diferentes (para las cuáles R no ha sido diseñado desde un principio). No obstante si hablamos de programar con estadística, econometría o similares(es decir cosas que hace un economista) no hay otro lenguaje como R y es imprescindible tener un buen manejo del mismo para ser un buen economista (no usen SPSS).\n\n\nCódigo\nGráfico\n\n\n\n\nCódigodf &lt;- top_20()\ndf &lt;-  df %&gt;% select(1,4,5)\ndf &lt;- df %&gt;%\n  mutate(porcentaje_numeric = ifelse(str_detect(Ratings, \"%\"),\n                                     as.numeric(str_remove(Ratings, \"%\")),\n                                     as.numeric(Ratings))) %&gt;%\n  rename(cuota = porcentaje_numeric) %&gt;%\n  select(1,2,4)\n \n\ncolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\", \"#95a5a6\")\n\ndf_logos &lt;- data.frame(lenguaje = c(\"Python\", \"C\", \"C++\", \"Java\", \"C#\", \"JavaScript\", \"PHP\", \"Visual Basic\", \"SQL\", \"Assembly language\", \"Scratch\", \"Fortran\", \"Go\", \"MATLAB\", \"Kotlin\", \"Delphi/Object Pascal\", \"Swift\",\"Ruby\",\"R\",\"Rust\"),\n                       logo = c(\"https://tse4.mm.bing.net/th?id=OIP.EDJ9xoErBbZqK2tExVoJfAAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&pid=Api&rs=1&c=1&qlt=95&w=103&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.ggb-3B-8LRfbgS0lPLYNxwHaIU&pid=Api&rs=1&c=1&qlt=95&w=105&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.dJ7A1hPb-BDRBrhOmhrVAgHaHa&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.2x1yN8k3MVCrkJFR_C5k-wHaIp&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.YPYdVAg5ieRspLI6HIpmDQHaIB&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.pkqphAig1t-PCsy4dkVrfAHaD5&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.Y224uoZnCs8yY0Sos_h4cQHaDd&pid=Api&rs=1&c=1&qlt=95&w=258&h=120\",\"https://tse4.mm.bing.net/th?id=OIP.S_9pgiKacbi3FxPKxDmusgHaFy&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.v5m2HW3FI3RbopnK8Cs6HgAAAA&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.bHt6sdtkwUqP91oPKlruGgHaEM&pid=Api&P=0&h=180\",\"https://tse2.explicit.bing.net/th?id=OIP.tLfIejOZiP_H0Zse0NIn2QAAAA&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.cI8KflTKlnmraGFa22XpKQHaEK&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.gW_YaXsZmuSntd_sy5zkIwHaHa&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.hEP7hOlvIzhKU1fGpizd7QAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.XozeB5BRQSzNCO6k7om62QHaHa&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.2BwE10YiTSXRrnW2LnVh8wHaHa&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.0rg-o4mEzLO5EHJ1zS52YwHaGe&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.YmPfYoQK3WvGEjFXusKV9QHaHa&pid=Api&P=0&h=180\"))\n\ndf_final &lt;- left_join(df, df_logos, by = c(`Programming Language` = \"lenguaje\"))\ndf_final &lt;- df_final %&gt;% mutate(Logo = logo, .after = `Programming Language`)\ndf_final &lt;- df_final %&gt;% select(-5)\n\ntabla_tiobe &lt;- gt(df_final) %&gt;% \n  gtExtras::gt_plt_dot(column = cuota, category_column = `Programming Language`,  max_value = NULL, palette = colores ) %&gt;% \n  gtExtras::gt_theme_nytimes() %&gt;% \n  tab_header(title = \"Lenguajes de programación más populares\",\n             subtitle = \"Según el índice TIOBE.\") %&gt;% \n  cols_width(`Programming Language` ~ px(368), 3 ~ px(30)) %&gt;%\n  gtExtras::gt_img_rows(columns = Logo, img_source = 'web')\n\n#- tabla_tiobe\n\n\n\n\n\nCódigotabla_tiobe\n\n\n\n\n\n\n\n\n\n\n\n\n\nLenguajes de programación más populares\n    \n\nSegún el índice TIOBE.\n    \n\nDec 2023\n      Programming Language\n      Logo\n      cuota\n    \n\n\n\n1\n\n  \n    Python\n    \n    \n  \n  \n    \n  \n\n\n13.86\n\n\n2\n\n  \n    C\n    \n    \n  \n  \n    \n  \n\n\n11.44\n\n\n3\n\n  \n    C++\n    \n    \n  \n  \n    \n  \n\n\n10.01\n\n\n4\n\n  \n    Java\n    \n    \n  \n  \n    \n  \n\n\n7.99\n\n\n5\n\n  \n    C#\n    \n    \n  \n  \n    \n  \n\n\n7.30\n\n\n6\n\n  \n    JavaScript\n    \n    \n  \n  \n    \n  \n\n\n2.90\n\n\n7\n\n  \n    PHP\n    \n    \n  \n  \n    \n  \n\n\n2.01\n\n\n8\n\n  \n    Visual Basic\n    \n    \n  \n  \n    \n  \n\n\n1.82\n\n\n9\n\n  \n    SQL\n    \n    \n  \n  \n    \n  \n\n\n1.61\n\n\n10\n\n  \n    Assembly language\n    \n    \n  \n  \n    \n  \n\n\n1.11\n\n\n11\n\n  \n    Scratch\n    \n    \n  \n  \n    \n  \n\n\n1.08\n\n\n12\n\n  \n    Fortran\n    \n    \n  \n  \n    \n  \n\n\n1.07\n\n\n13\n\n  \n    Go\n    \n    \n  \n  \n    \n  \n\n\n1.03\n\n\n14\n\n  \n    MATLAB\n    \n    \n  \n  \n    \n  \n\n\n0.93\n\n\n15\n\n  \n    Kotlin\n    \n    \n  \n  \n    \n  \n\n\n0.92\n\n\n16\n\n  \n    Delphi/Object Pascal\n    \n    \n  \n  \n    \n  \n\n\n0.92\n\n\n17\n\n  \n    Swift\n    \n    \n  \n  \n    \n  \n\n\n0.82\n\n\n18\n\n  \n    Rust\n    \n    \n  \n  \n    \n  \n\n\n0.80\n\n\n19\n\n  \n    Ruby\n    \n    \n  \n  \n    \n  \n\n\n0.77\n\n\n20\n\n  \n    R\n    \n    \n  \n  \n    \n  \n\n\n0.72\n\n\n\n\n\n\n\n\n\n\nEn el siguiente gráfico1 podemos observar una evolución comparada del top 10 lenguajes de programación. La mayoría de programas(C, C++, Java, JavaScript, etc) se han mantenido en el top 10 desde los inicios de la serie, sin embargo, es especialmente interesante la evolucion de dos lenguajes: Python y SQL.\nComo ya bien sabemos Python es posiblemente el GOAT en cuanto a lenguajes de programación y se puede observar en su ascenso en el ranking desde la posición 22 en el año 1993 a ser el número 1 en 2023.\nPor otro lado, a pesar de que SQL(Structure Query Language) es un lenguaje antiguo, se introdujo en el índice por primera vez en 2003(manteniéndose por tan solo un año) y no volvió a entrar en el índice hasta el año 2018. Desde entonces ha tenido un crecimiento sin precedentes debido debido al boom del BigData ya que este lenguaje permite manipular, obtener datos e incluso crear bases de datos. SQL es utilizado en todos aquellos sectores donde sea necesario manejar datos y empresas como Spotify o Facebook lo utilizan para almacenar información de sus usuarios.\n\n\nCódigo\nGráfico\n\n\n\n\nCódigodf_2 &lt;- long_term_history()\ndf_2 &lt;- df_2 %&gt;% pivot_longer(cols = 2:9, names_to = \"año\", values_to = \"posicion\")\ndf_2 &lt;- df_2 %&gt;% mutate(posicion =  as.numeric(posicion),\n                        año = as.numeric(año))\n\ndf_python &lt;- df_2 %&gt;% filter(`Programming Language` == \"Python\")\ndf_c &lt;- df_2 %&gt;% filter(`Programming Language` == \"C\")\ndf_cplus &lt;- df_2 %&gt;% filter(`Programming Language` == \"C++\")\ndf_cplus &lt;- df_2 %&gt;% filter(`Programming Language` == \"C++\")\ndf_java &lt;- df_2 %&gt;% filter(`Programming Language` == \"Java\")\ndf_javasc &lt;- df_2 %&gt;% filter(`Programming Language` == \"JavaScript\")\ndf_csharp &lt;- df_2 %&gt;% filter(`Programming Language` == \"C#\")\ndf_csharp &lt;- df_2 %&gt;% filter(`Programming Language` == \"C#\")\ndf_php &lt;- df_2 %&gt;% filter(`Programming Language` == \"PHP\")\ndf_vb &lt;- df_2 %&gt;% filter(`Programming Language` == \"Visual Basic\")\ndf_sql &lt;- df_2 %&gt;% filter(`Programming Language` == \"SQL\")\ndf_asm &lt;- df_2 %&gt;% filter(`Programming Language` == \"Assembly language\")\n\n\nplot_top &lt;- highchart() %&gt;%\n  hc_chart(type = \"line\") %&gt;%\n  hc_add_series(df_python, \"line\", hcaes(año, posicion), name = \"Python\") %&gt;%\n  hc_add_series(df_c, \"line\", hcaes(año, posicion), name = \"C\") %&gt;%\n  hc_add_series(df_cplus, \"line\", hcaes(año, posicion), name = \"C++\") %&gt;%\n  hc_add_series(df_java, \"line\", hcaes(año, posicion), name = \"Java\") %&gt;%\n  hc_add_series(df_javasc, \"line\", hcaes(año, posicion), name = \"JavaScript\") %&gt;%\n  hc_add_series(df_csharp, \"line\", hcaes(año, posicion), name = \"C#\") %&gt;%\n  hc_add_series(df_php, \"line\", hcaes(año, posicion), name = \"PHP\") %&gt;%\n  hc_add_series(df_vb, \"line\", hcaes(año, posicion), name = \"Visual Basic\") %&gt;%\n  hc_add_series(df_sql, \"line\", hcaes(año, posicion), name = \"SQL\") %&gt;%\n  hc_add_series(df_asm, \"line\", hcaes(año, posicion), name = \"Assembly Language\") %&gt;%\n  hc_title(text = \"Evolución del Top 10 lenguajes de programación\",\n           style = list(fontWeight = \"bold\",\n                        color = \"#333\")) %&gt;%\n  hc_xAxis(title = list(text = NULL)) %&gt;%\n  hc_yAxis(title = list(text = \"Posición índice TIOBE\")) %&gt;%\n  hc_yAxis(reversed = TRUE) %&gt;%\n  hc_tooltip(pointFormat = \"({point.x}, {point.y})\") \n\n#- plot_top\n\n\n\n\n\nCódigoplot_top\n\n\n\n\n\n\n\n\n\n\nA continuación hemos realizado una tabla con el Hall of Fame de lenguajes de programacion. En este caso la comunidad TIOBE otorga el premio de “Mejor lenguaje del año” no a aquel que mas popularidad tiene, sino a quién mayor incremento de rating ha tenido.\n\n\nCódigo\nGráfico\n\n\n\n\nCódigo\ndf_3 &lt;-hall_of_fame()\n\ndf_logo &lt;- data.frame(lenguaje = c(2022:2003),\n                      logo = c(\"https://th.bing.com/th?id=OIP.H3I3buZeC8Bkez8ADSrqMwHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&w=233&h=268&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&w=233&h=268&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&w=306&h=204&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP._Lm_T3scKhVEVFC54gcRxwHaE8&w=306&h=204&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.Y4VPmWW2m4_V2WFYOEGYRgHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://www.bing.com/th?id=OIP.LN_XZYfNR1okCsPl0pzIqQAAAA&w=114&h=100&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.rI4h3ndENsvdOwunJgW4aQAAAA&w=212&h=212&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.rI4h3ndENsvdOwunJgW4aQAAAA&w=212&h=212&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&w=306&h=204&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&w=233&h=268&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.MWdAq1cI3bRY5--dtqIwJwHaHY&w=250&h=249&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP._Lm_T3scKhVEVFC54gcRxwHaE8&w=306&h=204&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uhYWKsUDBf1rPMjzWZx3OgHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.H3I3buZeC8Bkez8ADSrqMwHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\"))\n\ndf_gt &lt;- left_join(df_logo,df_3, by = c(\"lenguaje\" = \"Year\")) %&gt;%\n  rename(Year = lenguaje)\ndf_gt &lt;- df_gt %&gt;% rename(Año = Year,\n                          Ganador = Winner)\n\n\n\ntabla_hallfame &lt;- gt(df_gt) %&gt;%\n  gtExtras::gt_color_rows( Año,palette = \"viridis\", pal_type = \"continuous\") %&gt;%\n  gtExtras::gt_img_rows(columns = logo, img_source = 'web') %&gt;%\n  tab_header(title = \"Mejor lenguaje de programación de cada año\",\n             subtitle = \"Según el índice TIOBE\") %&gt;%\n  gtExtras::gt_theme_538()\n\n#- tabla_hallfame\n\n\n\n\n\nCódigotabla_hallfame\n\n\n\n\n\n\n\nMejor lenguaje de programación de cada año\n    \n\nSegún el índice TIOBE\n    \n\nAño\n      logo\n      Ganador\n    \n\n\n\n2022\n\nC++\n\n\n2021\n\nPython\n\n\n2020\n\nPython\n\n\n2019\n\nC\n\n\n2018\n\nPython\n\n\n2017\n\nC\n\n\n2016\n\nGo\n\n\n2015\n\nJava\n\n\n2014\n\nJavaScript\n\n\n2013\n\nTransact-SQL\n\n\n2012\n\nObjective-C\n\n\n2011\n\nObjective-C\n\n\n2010\n\nPython\n\n\n2009\n\nGo\n\n\n2008\n\nC\n\n\n2007\n\nPython\n\n\n2006\n\nRuby\n\n\n2005\n\nJava\n\n\n2004\n\nPHP\n\n\n2003\n\nC++\n\n\n\n\n\n\n\n\n\n\nPython es el lenguaje más laureado con un total de 5 premios, cifra muy superior a la del resto de sus competidores. En segundo lugar se encuentra C con 3 premios(cabe destacar que tanto Python como C son los dos lenguajes con más premios y a su vez los más populares en la actualidad). Finalmente compartiendo la última posición del podio se hayan Objective-C, Go, Java y C++ todos con 2 premios.\n\n\nCódigo\nGráfico\n\n\n\n\nCódigodf_3 &lt;-hall_of_fame()\n\ndf_3 &lt;- df_3 %&gt;% rename( Ganador = `Winner`) %&gt;%\n  group_by(Ganador) %&gt;%\n  count(n()) %&gt;%\n  select(1,3) %&gt;%\n  rename(numero_premios = n )\n\n\np_winners &lt;- ggplot()+ \n  geom_bar(data = df_3, aes(x = fct_reorder(Ganador, numero_premios), y = numero_premios ,fill = Ganador), stat = \"identity\") + \n  theme_clean() + \n  labs(title = \"Número de premios a Mejor Lenguaje del año\",\n       caption = \"Fuente: Elaboración propia a partir del índice TIOBE\",\n       y = NULL,\n       x = NULL) + \n  theme(legend.position = \"none\",\n        axis.text.y = element_text(size = 12, face = \"bold\")) +\n  scale_fill_brewer(palette = \"Paired\") + coord_flip()\n\n#- p_winners\n\n\n\n\n\nCódigop_winners"
  },
  {
    "objectID": "my_trabajo_BigData.html#con-qué-lenguajes-suelen-comenzar-los-jóvenes-que-empiezan-carrera-en-la-programación",
    "href": "my_trabajo_BigData.html#con-qué-lenguajes-suelen-comenzar-los-jóvenes-que-empiezan-carrera-en-la-programación",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "¿Con qué lenguajes suelen comenzar los jóvenes que empiezan carrera en la programación?",
    "text": "¿Con qué lenguajes suelen comenzar los jóvenes que empiezan carrera en la programación?\nUna de las preguntas que más interesa a la hora de aprender a programar es precisamente esta: ¿con qué lenguaje empezar a programar?. Especialmente son aquellos más jóvenes que deciden iniciarse en el mundo de la programación o el desarrollo de software quienes se hacen más a menudo esta pregunta.\nPara hacer frente a esta cuestión, hemos descargado e instalado en una carpeta dentro del project los datos en formato .csv de la encuesta. En ella, aparecen decenas de miles de observaciones y distintas variables, de las cuales, daremos más importancia a dos: la franja de edad, que en este caso son los jóvenes de 18 a 24 años, y los diez lenguajes más populares. De esta manera, obtendremos una lista de lenguajes ordenados de menor a mayor según el uso que se le de en esta franja de edad.\nPrimero, cargamos los datos y los arreglamos para poder trabajar con ellos.\n\nCódigomy_ruta &lt;- here::here(\"datos\", \"survey_results_public.csv.zip\")\ndf &lt;- rio::import(my_ruta)\ndf &lt;- df %&gt;%  \n  select(Age , LanguageHaveWorkedWith) %&gt;% \n  separate_rows(LanguageHaveWorkedWith, sep = \";\\\\s*\")\ndf1 &lt;- df %&gt;% filter(Age == \"18-24 years old\") %&gt;% \n  filter(!is.na(LanguageHaveWorkedWith)) %&gt;% \n  group_by(LanguageHaveWorkedWith) %&gt;%\n  summarise(Observaciones = n()) %&gt;% \n  top_n(10, Observaciones) %&gt;% \n  arrange\ndf1\n#&gt; # A tibble: 10 × 2\n#&gt;    LanguageHaveWorkedWith  Observaciones\n#&gt;    &lt;chr&gt;                           &lt;int&gt;\n#&gt;  1 Bash/Shell (all shells)          5632\n#&gt;  2 C                                5944\n#&gt;  3 C#                               4867\n#&gt;  4 C++                              6232\n#&gt;  5 HTML/CSS                        10916\n#&gt;  6 Java                             7330\n#&gt;  7 JavaScript                      12176\n#&gt;  8 Python                          11008\n#&gt;  9 SQL                              8258\n#&gt; 10 TypeScript                       7438\n\n\nUna vez tenemos los datos ordenados en un data.frame, hacemos un gráfico de barras con ayuda de ggplot2.\n\n\nCódigo\nGráfico\n\n\n\n\nCódigocolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\",\"#33FF99\",\"#95a5a6\", \"#FFCCFF\")\n\ndiez_mas_usados &lt;- ggplot(df1, aes(x = reorder(LanguageHaveWorkedWith, Observaciones), y = Observaciones)) +\n  geom_bar(stat = \"identity\", fill = colores) +\n  labs(title = \"Top 10 Lenguajes de Programación para Personas de 18-24 años\",\n       x = \"Lenguajes de Programación\",\n       y = \"Número de Observaciones\") +\n  theme_minimal() +\n  theme(axis.title = element_blank(),\n        axis.text.x = element_text(size = 8, angle = 45, hjust = 1),\n        axis.text.y = element_text(size = 8),\n        plot.title = element_text(size = 12, face = \"bold\"),\n        plot.subtitle = element_text(size = 10)) +\n  labs(title = \"Lenguajes de programación con los que se inician los jóvenes\",\n       subtitle = \"medido en número de respuestas a la encuesta\",\n       caption = \"Fuente: encuesta anual de Stack Overflow\") +\n  guides(fill = FALSE) + # Eliminar la leyenda de la estética fill\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n#- diez_mas_usados\n\n\n\n\n\nCódigodiez_mas_usados\n\n\n\n\n\n\n\n\n\n\nRepresentamos así que los jóvenes, a la edad en la que usualmente empiezan a hacer carrera dentro de la programación, o incluso si simplemente quieren estudiar por la pura satisfacción de conocimiento, eligen con especial preferencia tres lenguajes: JavaScript, Python y HTML/CSS, destacando el primero de los mencionados.\nLos jóvenes a menudo eligen aprender JavaScript porque es un lenguaje de programación versátil y ampliamente asentado ya en la comunidad. JavaScript se utiliza por ejemplo en el desarrollo web para crear interactividad en las páginas, lo que lo hace atractivo para aquellos interesados en la creación de sitios web dinámicos. Además, es un lenguaje accesible para principiantes, tiene una comunidad activa que comparte recursos educativos y ofrece oportunidades laborales en el ámbito del desarrollo web."
  },
  {
    "objectID": "my_trabajo_BigData.html#cuál-es-el-lenguaje-de-programación-más-popular-para-cada-grupo-de-edad",
    "href": "my_trabajo_BigData.html#cuál-es-el-lenguaje-de-programación-más-popular-para-cada-grupo-de-edad",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "¿Cuál es el lenguaje de programación más popular para cada grupo de edad?",
    "text": "¿Cuál es el lenguaje de programación más popular para cada grupo de edad?\nAhora, aunque podamos ver cuales son aquellos lenguajes más populares tanto en la población general como en el caso concreto de los jóvenes principiantes, sigue siendo interesante señalar cuales son los lenguajes favoritos de los usuarios respecto a distintas franjas de edad, para conocer más o menos el perfil medio de un programador cualquiera con determinados años de edad.\nPara esta pregunta haremos valer una tabla, no un gráfico al uso a lo ggplot2. Después de cargar paquetes, arreglamos el data.frame original para poder trabajar cómodamente con él.\n\nCódigo#De nuevo, lo primero que haremos será cargar los paquetes necesarios.\n\ndf2 &lt;- df %&gt;%\n  filter(!is.na(LanguageHaveWorkedWith)) %&gt;%\n  group_by(Age, LanguageHaveWorkedWith) %&gt;%\n  summarise(Observaciones = n()) %&gt;%\n  group_by(Age) %&gt;%\n  top_n(1, Observaciones) %&gt;%\n  arrange(Age, desc(Observaciones)) %&gt;% \n  select(-Observaciones) %&gt;% \n  rename(lenguaje = LanguageHaveWorkedWith)\ndf2\n#&gt; # A tibble: 8 × 2\n#&gt; # Groups:   Age [8]\n#&gt;   Age                lenguaje  \n#&gt;   &lt;chr&gt;              &lt;chr&gt;     \n#&gt; 1 18-24 years old    JavaScript\n#&gt; 2 25-34 years old    JavaScript\n#&gt; 3 35-44 years old    JavaScript\n#&gt; 4 45-54 years old    JavaScript\n#&gt; 5 55-64 years old    SQL       \n#&gt; 6 65 years or older  SQL       \n#&gt; 7 Prefer not to say  JavaScript\n#&gt; 8 Under 18 years old Python\n\n\nTenemos el data.frame ordenado, falta añadirle más cosas para poder hacer una tabla que exprese mejor los resultados, tales como una paleta de colores e iconos de los lenguajes.\n\nCódigodf_logos &lt;- data.frame(lenguaje = c(\"Python\", \"C\", \"C++\", \"Java\", \"C#\", \"JavaScript\", \"PHP\", \"Visual Basic\", \"SQL\", \"Assembly language\", \"Scratch\", \"Fortran\", \"Go\", \"MATLAB\", \"Kotlin\", \"Delphi/Object Pascal\", \"Swift\",\"Ruby\",\"R\",\"Rust\", \"Golang\"),\n                       logo = c(\"https://tse4.mm.bing.net/th?id=OIP.EDJ9xoErBbZqK2tExVoJfAAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&pid=Api&rs=1&c=1&qlt=95&w=103&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.ggb-3B-8LRfbgS0lPLYNxwHaIU&pid=Api&rs=1&c=1&qlt=95&w=105&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.dJ7A1hPb-BDRBrhOmhrVAgHaHa&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.2x1yN8k3MVCrkJFR_C5k-wHaIp&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.YPYdVAg5ieRspLI6HIpmDQHaIB&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.pkqphAig1t-PCsy4dkVrfAHaD5&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.Y224uoZnCs8yY0Sos_h4cQHaDd&pid=Api&rs=1&c=1&qlt=95&w=258&h=120\",\"https://tse4.mm.bing.net/th?id=OIP.S_9pgiKacbi3FxPKxDmusgHaFy&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.v5m2HW3FI3RbopnK8Cs6HgAAAA&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.bHt6sdtkwUqP91oPKlruGgHaEM&pid=Api&P=0&h=180\",\"https://tse2.explicit.bing.net/th?id=OIP.tLfIejOZiP_H0Zse0NIn2QAAAA&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.cI8KflTKlnmraGFa22XpKQHaEK&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.gW_YaXsZmuSntd_sy5zkIwHaHa&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.hEP7hOlvIzhKU1fGpizd7QAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.XozeB5BRQSzNCO6k7om62QHaHa&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.2BwE10YiTSXRrnW2LnVh8wHaHa&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.0rg-o4mEzLO5EHJ1zS52YwHaGe&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.YmPfYoQK3WvGEjFXusKV9QHaHa&pid=Api&P=0&h=180\", \"https://seeklogo.com/images/G/go-logo-046185B647-seeklogo.com.png\"))\ndf2_final &lt;- left_join(df2, df_logos, by = (\"lenguaje\"))\n#El data.frame daba problemas así que lo he rehecho con un poco de ayuda de R base.\nages &lt;- df2_final$Age\nlenguajes &lt;- df2_final$lenguaje\nlogos &lt;- df2_final$logo\ndataframef2_final &lt;- data.frame(ages, lenguajes, logos)\n\n\nAhora sí, creamos la tabla con ayuda del paquete gt.\n\n\nCódigo\nGráfico\n\n\n\n\nCódigogt_tbl &lt;- dataframef2_final %&gt;%\n  gt() %&gt;% \n  gtExtras::gt_theme_espn() %&gt;%\n  cols_width(\"lenguajes\" ~ px(100), \"logos\" ~ px(80)) %&gt;% \n  tab_header(title = \"Lenguajes de programación más populares por franjas de edad\",\n             subtitle = \"Según la encuesta anual de Stack Overflow.\")%&gt;%\n  gtExtras::gt_img_rows(columns = logos, img_source = 'web')\n\n#- gt_tbl\n\n\n\n\n\nCódigogt_tbl\n\n\n\n\n\n\n\n\n\n\n\n\nLenguajes de programación más populares por franjas de edad\n    \n\nSegún la encuesta anual de Stack Overflow.\n    \n\nages\n      lenguajes\n      logos\n    \n\n\n\n18-24 years old\nJavaScript\n\n\n\n25-34 years old\nJavaScript\n\n\n\n35-44 years old\nJavaScript\n\n\n\n45-54 years old\nJavaScript\n\n\n\n55-64 years old\nSQL\n\n\n\n65 years or older\nSQL\n\n\n\nPrefer not to say\nJavaScript\n\n\n\nUnder 18 years old\nPython\n\n\n\n\n\n\n\n\n\n\nLos resultados son evidentes: JavaScript arrasa en la mayoría de las edades por las mismas razones que ya hemos expuesto en la pregunta anterior. Además, es un lenguaje ya muy consolidado a lo largo de los años, como podemos ver por su prevalencia incluso en programadores senior."
  },
  {
    "objectID": "my_trabajo_BigData.html#cuáles-son-los-medios-más-comunes-con-los-que-las-personas-aprenden-a-programar",
    "href": "my_trabajo_BigData.html#cuáles-son-los-medios-más-comunes-con-los-que-las-personas-aprenden-a-programar",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "¿Cuáles son los medios más comunes con los que las personas aprenden a programar?",
    "text": "¿Cuáles son los medios más comunes con los que las personas aprenden a programar?\nLa programación es\n\nCódigomy_ruta &lt;- here::here(\"datos\", \"survey_results_public.csv\")\ndf &lt;- rio::import(my_ruta)\ndf &lt;- df %&gt;% \n  select(LearnCode) %&gt;% \n  rename(learn=LearnCode) %&gt;% \n  separate_rows(learn, sep = \";\\\\s*\") %&gt;% \n  drop_na() %&gt;% \n  group_by(learn) %&gt;% \n  summarise(Observaciones = n()) %&gt;% \n  arrange(desc(Observaciones)) %&gt;% \n  filter(learn != \"Other (please specify):\")\n\n\nAhora que tenemos los datos ordenados en un data.frame, podemos hacer una tabla que muestre de forma clara los resultados obtenidos.\n\nCódigocolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\",\"#33FF99\", \"#FFCCFF\")\ngt_df &lt;- gt(df) %&gt;%\n  gtExtras::gt_plt_dot(column = \"Observaciones\", category_column = `learn`,  \n                       max_value = NULL, palette = colores) %&gt;%\n  gtExtras::gt_theme_nytimes() %&gt;%\n  cols_width(`learn` ~ px(400), 2 ~ px(150)) %&gt;% \n  tab_header(title = \"Maneras más usuales que se usan para aprender programación\",\n             subtitle = \"Según la encuesta anual de Stack Overflow.\")\ngt_df\n\n\n\n\n\n\n\n\n\n\n\nManeras más usuales que se usan para aprender programación\n    \n\nSegún la encuesta anual de Stack Overflow.\n    \n\nlearn\n      Observaciones\n    \n\n\n\n\n  \n    Other online resources (e.g., videos, blogs, forum)\n    \n    \n  \n  \n    \n  \n\n70244\n\n\n\n  \n    Books / Physical media\n    \n    \n  \n  \n    \n  \n\n45406\n\n\n\n  \n    School (i.e., University, College, etc)\n    \n    \n  \n  \n    \n  \n\n43957\n\n\n\n  \n    Online Courses or Certification\n    \n    \n  \n  \n    \n  \n\n43201\n\n\n\n  \n    On the job training\n    \n    \n  \n  \n    \n  \n\n40380\n\n\n\n  \n    Colleague\n    \n    \n  \n  \n    \n  \n\n20523\n\n\n\n  \n    Friend or family member\n    \n    \n  \n  \n    \n  \n\n9936\n\n\n\n  \n    Coding Bootcamp\n    \n    \n  \n  \n    \n  \n\n8602\n\n\n\n  \n    Hackathons (virtual or in-person)\n    \n    \n  \n  \n    \n  \n\n7033"
  },
  {
    "objectID": "my_trabajo_BigData.html#cuáles-son-los-lenguajes-cuyo-manejo-brinda-mayores-salarios-en-promedio",
    "href": "my_trabajo_BigData.html#cuáles-son-los-lenguajes-cuyo-manejo-brinda-mayores-salarios-en-promedio",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "¿Cuáles son los lenguajes cuyo manejo brinda mayores salarios en promedio?",
    "text": "¿Cuáles son los lenguajes cuyo manejo brinda mayores salarios en promedio?\nLa respuesta a esta pregunta está en unos datos que no son de esta encuesta, los hemos obtenido de una web distinta, pero lo incluimos en esta sección porque creemos que está muy relacionado con la temática de importancia y contexto socio económico de los lenguajes de programación. De esta forma, primero cargamos los datos y añadimos elementos que nos favorecerán el hacer una tabla que muestre los datos ordenados, de mayor a menor salario mediano.\n\nCódigomy_ruta2 &lt;- here::here(\"datos\",\"lista_lenguajes_mejor_pagados.xlsx\")\naa &lt;- rio::import(my_ruta2)\naa &lt;- aa %&gt;% select(-\"Number of Jobs\")\ndf_logos &lt;- data.frame(lenguaje = c(\"Python\", \"C\", \"C++\", \"Java\", \"C#\", \"JavaScript\", \"PHP\", \"Visual Basic\", \"SQL\", \"Assembly language\", \"Scratch\", \"Fortran\", \"Go\", \"MATLAB\", \"Kotlin\", \"Delphi/Object Pascal\", \"Swift\",\"Ruby\",\"R\",\"Rust\", \"Golang\"),\n                       logo = c(\"https://tse4.mm.bing.net/th?id=OIP.EDJ9xoErBbZqK2tExVoJfAAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&pid=Api&rs=1&c=1&qlt=95&w=103&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.ggb-3B-8LRfbgS0lPLYNxwHaIU&pid=Api&rs=1&c=1&qlt=95&w=105&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.dJ7A1hPb-BDRBrhOmhrVAgHaHa&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.2x1yN8k3MVCrkJFR_C5k-wHaIp&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.YPYdVAg5ieRspLI6HIpmDQHaIB&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.pkqphAig1t-PCsy4dkVrfAHaD5&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.Y224uoZnCs8yY0Sos_h4cQHaDd&pid=Api&rs=1&c=1&qlt=95&w=258&h=120\",\"https://tse4.mm.bing.net/th?id=OIP.S_9pgiKacbi3FxPKxDmusgHaFy&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.v5m2HW3FI3RbopnK8Cs6HgAAAA&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.bHt6sdtkwUqP91oPKlruGgHaEM&pid=Api&P=0&h=180\",\"https://tse2.explicit.bing.net/th?id=OIP.tLfIejOZiP_H0Zse0NIn2QAAAA&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.cI8KflTKlnmraGFa22XpKQHaEK&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.gW_YaXsZmuSntd_sy5zkIwHaHa&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.hEP7hOlvIzhKU1fGpizd7QAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.XozeB5BRQSzNCO6k7om62QHaHa&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.2BwE10YiTSXRrnW2LnVh8wHaHa&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.0rg-o4mEzLO5EHJ1zS52YwHaGe&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.YmPfYoQK3WvGEjFXusKV9QHaHa&pid=Api&P=0&h=180\", \"https://seeklogo.com/images/G/go-logo-046185B647-seeklogo.com.png\"))\nmy_ruta2 &lt;- here::here(\"datos\",\"lista_lenguajes_mejor_pagados.xlsx\")\naa &lt;- rio::import(my_ruta2)\naa &lt;- aa %&gt;% select(-\"Number of Jobs\") %&gt;% \n  rename(lenguaje = Language)\ndf_final &lt;- left_join(aa, df_logos, by = (\"lenguaje\"))\n\n\nAhora que tenemos el data.frame listo para trabajar con el, componemos la tabla.\n\nCódigocolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\",\"#33FF99\",\"#95a5a6\", \"#FFCCFF\")\n\ngt_salarios &lt;- gt(df_final) %&gt;%\n  gtExtras::gt_plt_dot(column = \"Median Salary ($)\", category_column = `lenguaje`,  \n                       max_value = NULL, palette = colores) %&gt;%\n  gtExtras::gt_theme_espn() %&gt;%\n  cols_width(`lenguaje` ~ px(400), 3 ~ px(80)) %&gt;% \n  tab_header(title = \"Lenguajes de programación con mejores salarios\",\n             subtitle = \"Según la web 4 day week.\") %&gt;%\n  gtExtras::gt_img_rows(columns = logo, img_source = 'web')\ngt_salarios\n\n\n\n\n\n\n\n\n\n\n\n\nLenguajes de programación con mejores salarios\n    \n\nSegún la web 4 day week.\n    \n\nlenguaje\n      Median Salary ($)\n      logo\n    \n\n\n\n\n  \n    Swift\n    \n    \n  \n  \n    \n  \n\n116000\n\n\n\n\n  \n    Python\n    \n    \n  \n  \n    \n  \n\n105000\n\n\n\n\n  \n    Golang\n    \n    \n  \n  \n    \n  \n\n100000\n\n\n\n\n  \n    C++\n    \n    \n  \n  \n    \n  \n\n100000\n\n\n\n\n  \n    Java\n    \n    \n  \n  \n    \n  \n\n95000\n\n\n\n\n  \n    Ruby\n    \n    \n  \n  \n    \n  \n\n95000\n\n\n\n\n  \n    Rust\n    \n    \n  \n  \n    \n  \n\n88000\n\n\n\n\n  \n    SQL\n    \n    \n  \n  \n    \n  \n\n85000"
  },
  {
    "objectID": "my_trabajo_BigData.html#cuales-son-los-medios-más-comunes-con-los-que-las-personas-aprenden-a-programar",
    "href": "my_trabajo_BigData.html#cuales-son-los-medios-más-comunes-con-los-que-las-personas-aprenden-a-programar",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "¿Cuales son los medios más comunes con los que las personas aprenden a programar?",
    "text": "¿Cuales son los medios más comunes con los que las personas aprenden a programar?\nLa programación consiste en un conjunto de conocimientos, herramientas y habilidades que permiten al usuario llevar a cabo el proceso de crear un conjunto de instrucciones que le dicen a una computadora como realizar algún tipo de tarea. Todos estos elementos de aprendizaje son muy diversos y no hay una, ni dos, ni tres únicas maneras de aprenderlos.\nAsí pues, también nos parece que abordar cuales son las principales fuentes de estudio de aquellos que tienen intención o incluso han logrado alcanzar dichas destrezas es algo que suma bastante a nuestro trabajo.\nDe nuevo, cargamos datos y “limpiamos” el data.frame.\n\nCódigomy_ruta &lt;- here::here(\"datos\", \"survey_results_public.csv.zip\")\ndf &lt;- rio::import(my_ruta)\ndf &lt;- df %&gt;% \n  select(LearnCode) %&gt;% \n  rename(learn=LearnCode) %&gt;% \n  separate_rows(learn, sep = \";\\\\s*\") %&gt;% \n  drop_na() %&gt;% \n  group_by(learn) %&gt;% \n  summarise(Observaciones = n()) %&gt;% \n  arrange(desc(Observaciones)) %&gt;% \n  filter(learn != \"Other (please specify):\")\n\n\nAhora que tenemos los datos ordenados en un data.frame, podemos hacer una tabla que muestre de forma clara los resultados obtenidos.\n\n\nCódigo\nGráfico\n\n\n\n\nCódigocolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\",\"#33FF99\", \"#FFCCFF\")\ngt_df &lt;- gt(df) %&gt;%\n  gtExtras::gt_plt_dot(column = \"Observaciones\", category_column = `learn`,  \n                       max_value = NULL, palette = colores) %&gt;%\n  gtExtras::gt_theme_nytimes() %&gt;%\n  cols_width(`learn` ~ px(400), 2 ~ px(150)) %&gt;% \n  tab_header(title = \"Maneras más usuales que se usan para aprender programación\",\n             subtitle = \"Según la encuesta anual de Stack Overflow.\")\n#- gt_df\n\n\n\n\n\nCódigogt_df\n\n\n\n\n\n\n\n\n\n\n\nManeras más usuales que se usan para aprender programación\n    \n\nSegún la encuesta anual de Stack Overflow.\n    \n\nlearn\n      Observaciones\n    \n\n\n\n\n  \n    Other online resources (e.g., videos, blogs, forum)\n    \n    \n  \n  \n    \n  \n\n70244\n\n\n\n  \n    Books / Physical media\n    \n    \n  \n  \n    \n  \n\n45406\n\n\n\n  \n    School (i.e., University, College, etc)\n    \n    \n  \n  \n    \n  \n\n43957\n\n\n\n  \n    Online Courses or Certification\n    \n    \n  \n  \n    \n  \n\n43201\n\n\n\n  \n    On the job training\n    \n    \n  \n  \n    \n  \n\n40380\n\n\n\n  \n    Colleague\n    \n    \n  \n  \n    \n  \n\n20523\n\n\n\n  \n    Friend or family member\n    \n    \n  \n  \n    \n  \n\n9936\n\n\n\n  \n    Coding Bootcamp\n    \n    \n  \n  \n    \n  \n\n8602\n\n\n\n  \n    Hackathons (virtual or in-person)\n    \n    \n  \n  \n    \n  \n\n7033\n\n\n\n\n\n\n\n\n\nEl resultado es muy interesante. Si bien el aprendizaje mediante medios físicos o más tradicionales como libros y programas educativos en universidades y centros sigue estando en la cabeza de la lista, en el primer puesto está nada más y nada menos que el aprendizaje por recursos en línea.\nEsto al final únicamente evidencia la tendencia que podemos haber ido notando desde inicios de siglo, sobre todo durante la última década y más aun tras la pandemia. Cada vez son más los alumnos que aprenden vía telemática a través de trabajos, blogs y vídeos en la red, y, como cabía de esperar de los alumnos de un sector tan ligado a la tecnología, los programadores no se han quedado atrás en esta tendencia, siendo que incluso el aprendizaje por cursos certificados está a muy corta distancia por debajo del aprendizaje en la universidad."
  },
  {
    "objectID": "my_trabajo_BigData.html#cuales-son-los-lenguajes-cuyo-manejo-brinda-mayores-salarios-en-promedio",
    "href": "my_trabajo_BigData.html#cuales-son-los-lenguajes-cuyo-manejo-brinda-mayores-salarios-en-promedio",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "¿Cuales son los lenguajes cuyo manejo brinda mayores salarios en promedio?",
    "text": "¿Cuales son los lenguajes cuyo manejo brinda mayores salarios en promedio?\nLa respuesta a esta pregunta está en unos datos que no son de esta encuesta, los hemos obtenido de una web distinta, pero lo incluimos en esta sección porque creemos que está muy relacionado con la temática de importancia y contexto socio económico de los lenguajes de programación. De esta forma, primero cargamos los datos y añadimos elementos que nos favorecerán el hacer una tabla que muestre los datos ordenados, de mayor a menor salario mediano.\n\nCódigomy_ruta2 &lt;- here::here(\"datos\",\"lista_lenguajes_mejor_pagados.xlsx\")\naa &lt;- rio::import(my_ruta2)\naa &lt;- aa %&gt;% select(-\"Number of Jobs\")\ndf_logos &lt;- data.frame(lenguaje = c(\"Python\", \"C\", \"C++\", \"Java\", \"C#\", \"JavaScript\", \"PHP\", \"Visual Basic\", \"SQL\", \"Assembly language\", \"Scratch\", \"Fortran\", \"Go\", \"MATLAB\", \"Kotlin\", \"Delphi/Object Pascal\", \"Swift\",\"Ruby\",\"R\",\"Rust\", \"Golang\"),\n                       logo = c(\"https://tse4.mm.bing.net/th?id=OIP.EDJ9xoErBbZqK2tExVoJfAAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&pid=Api&rs=1&c=1&qlt=95&w=103&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.ggb-3B-8LRfbgS0lPLYNxwHaIU&pid=Api&rs=1&c=1&qlt=95&w=105&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.dJ7A1hPb-BDRBrhOmhrVAgHaHa&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.2x1yN8k3MVCrkJFR_C5k-wHaIp&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.YPYdVAg5ieRspLI6HIpmDQHaIB&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.pkqphAig1t-PCsy4dkVrfAHaD5&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.Y224uoZnCs8yY0Sos_h4cQHaDd&pid=Api&rs=1&c=1&qlt=95&w=258&h=120\",\"https://tse4.mm.bing.net/th?id=OIP.S_9pgiKacbi3FxPKxDmusgHaFy&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.v5m2HW3FI3RbopnK8Cs6HgAAAA&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.bHt6sdtkwUqP91oPKlruGgHaEM&pid=Api&P=0&h=180\",\"https://tse2.explicit.bing.net/th?id=OIP.tLfIejOZiP_H0Zse0NIn2QAAAA&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.cI8KflTKlnmraGFa22XpKQHaEK&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.gW_YaXsZmuSntd_sy5zkIwHaHa&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.hEP7hOlvIzhKU1fGpizd7QAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.XozeB5BRQSzNCO6k7om62QHaHa&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.2BwE10YiTSXRrnW2LnVh8wHaHa&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.0rg-o4mEzLO5EHJ1zS52YwHaGe&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.YmPfYoQK3WvGEjFXusKV9QHaHa&pid=Api&P=0&h=180\", \"https://seeklogo.com/images/G/go-logo-046185B647-seeklogo.com.png\"))\nmy_ruta2 &lt;- here::here(\"datos\",\"lista_lenguajes_mejor_pagados.xlsx\")\naa &lt;- rio::import(my_ruta2)\naa &lt;- aa %&gt;% select(-\"Number of Jobs\") %&gt;% \n  rename(lenguaje = Language)\ndf_final &lt;- left_join(aa, df_logos, by = (\"lenguaje\"))\n\n\nAhora que tenemos el data.frame listo para trabajar con el, componemos la tabla.\n\n\nCódigo\nGráfico\n\n\n\n\nCódigocolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\",\"#33FF99\",\"#95a5a6\", \"#FFCCFF\")\n\ngt_salarios &lt;- gt(df_final) %&gt;%\n  gtExtras::gt_plt_dot(column = \"Median Salary ($)\", category_column = `lenguaje`,  \n                       max_value = NULL, palette = colores) %&gt;%\n  gtExtras::gt_theme_espn() %&gt;%\n  cols_width(`lenguaje` ~ px(400), 3 ~ px(80)) %&gt;% \n  tab_header(title = \"Lenguajes de programación con mejores salarios\",\n             subtitle = \"Según la web 4 day week.\") %&gt;%\n  gtExtras::gt_img_rows(columns = logo, img_source = 'web')\n#- gt_salarios\n\n\n\n\n\nCódigogt_salarios\n\n\n\n\n\n\n\n\n\n\n\n\nLenguajes de programación con mejores salarios\n    \n\nSegún la web 4 day week.\n    \n\nlenguaje\n      Median Salary ($)\n      logo\n    \n\n\n\n\n  \n    Swift\n    \n    \n  \n  \n    \n  \n\n116000\n\n\n\n\n  \n    Python\n    \n    \n  \n  \n    \n  \n\n105000\n\n\n\n\n  \n    Golang\n    \n    \n  \n  \n    \n  \n\n100000\n\n\n\n\n  \n    C++\n    \n    \n  \n  \n    \n  \n\n100000\n\n\n\n\n  \n    Java\n    \n    \n  \n  \n    \n  \n\n95000\n\n\n\n\n  \n    Ruby\n    \n    \n  \n  \n    \n  \n\n95000\n\n\n\n\n  \n    Rust\n    \n    \n  \n  \n    \n  \n\n88000\n\n\n\n\n  \n    SQL\n    \n    \n  \n  \n    \n  \n\n85000\n\n\n\n\n\n\n\n\n\n\nLa primera conclusión más o menos evidente es la siguiente: en el sector de la programación, los salarios parecen ser relativamente altos. Ahora bien, destaca que el lenguaje cuyo manejo está mejor remunerado no es aquel más popular en ninguna franja de edad, SWIP es un lenguaje creado por Apple enfocado al desarrollo de aplicaciones para iOS y macOS, el ecosistema de la empresa mencionada.Swift puede llamar a funciones de C y tiene la intención de ser un lenguaje con alta seguridad y con un desarrollo rápido y preciso. Además, es de código abierto."
  },
  {
    "objectID": "my_slides_BigData.html#section-1",
    "href": "my_slides_BigData.html#section-1",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "",
    "text": "Índice\n\n\nIntroducción\n\n1.Análisis del índice TIOBE\n\nLenguajes de programación mas populares\nEvolución del top 10 lenguajes\nMejor lenguaje de cada año\nNúmero de premios a mejor lenguajes\n\n2.Estudio sobre la encuesta anual de Stack Over Flow\n\n¿Con que lenguaje suelen iniciarse los jóvenes?\nLenguajes más populares por franja de edad\nMétodos más comunes para aprender programación\nLenguajes de programación mejor remunerados\n\n3.Aplicación de la programación para la ciencia económica\n\nModelo estocástico neoclásico de crecimiento\nResultados del modelo\nUna miqueta de Econometría"
  },
  {
    "objectID": "my_slides_BigData.html#análisis-del-índice-tiobe",
    "href": "my_slides_BigData.html#análisis-del-índice-tiobe",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "1. Análisis del índice TIOBE",
    "text": "1. Análisis del índice TIOBE\n\nLenguajes más popularesEvolución top 10 lenguajes\n\n\n\n\nCódigo\nlibrary(tiobeindexr)\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(RColorBrewer)\nlibrary(ggthemes)\nlibrary(highcharter)\nlibrary(gtExtras)\n\ndf &lt;- top_20()\ndf &lt;-  df %&gt;% select(1,4,5)\ndf &lt;- df %&gt;%\n  mutate(porcentaje_numeric = ifelse(str_detect(Ratings, \"%\"),\n                                     as.numeric(str_remove(Ratings, \"%\")),\n                                     as.numeric(Ratings))) %&gt;%\n  rename(cuota = porcentaje_numeric) %&gt;%\n  select(1,2,4)\n \n\ncolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\", \"#95a5a6\")\n\ndf_logos &lt;- data.frame(lenguaje = c(\"Python\", \"C\", \"C++\", \"Java\", \"C#\", \"JavaScript\", \"PHP\", \"Visual Basic\", \"SQL\", \"Assembly language\", \"Scratch\", \"Fortran\", \"Go\", \"MATLAB\", \"Kotlin\", \"Delphi/Object Pascal\", \"Swift\",\"Ruby\",\"R\",\"Rust\"),\n                       logo = c(\"https://tse4.mm.bing.net/th?id=OIP.EDJ9xoErBbZqK2tExVoJfAAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&pid=Api&rs=1&c=1&qlt=95&w=103&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.ggb-3B-8LRfbgS0lPLYNxwHaIU&pid=Api&rs=1&c=1&qlt=95&w=105&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.dJ7A1hPb-BDRBrhOmhrVAgHaHa&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.2x1yN8k3MVCrkJFR_C5k-wHaIp&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.YPYdVAg5ieRspLI6HIpmDQHaIB&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.pkqphAig1t-PCsy4dkVrfAHaD5&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.Y224uoZnCs8yY0Sos_h4cQHaDd&pid=Api&rs=1&c=1&qlt=95&w=258&h=120\",\"https://tse4.mm.bing.net/th?id=OIP.S_9pgiKacbi3FxPKxDmusgHaFy&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.v5m2HW3FI3RbopnK8Cs6HgAAAA&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.bHt6sdtkwUqP91oPKlruGgHaEM&pid=Api&P=0&h=180\",\"https://tse2.explicit.bing.net/th?id=OIP.tLfIejOZiP_H0Zse0NIn2QAAAA&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.cI8KflTKlnmraGFa22XpKQHaEK&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.gW_YaXsZmuSntd_sy5zkIwHaHa&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.hEP7hOlvIzhKU1fGpizd7QAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.XozeB5BRQSzNCO6k7om62QHaHa&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.2BwE10YiTSXRrnW2LnVh8wHaHa&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.0rg-o4mEzLO5EHJ1zS52YwHaGe&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.YmPfYoQK3WvGEjFXusKV9QHaHa&pid=Api&P=0&h=180\"))\n\ndf_final &lt;- left_join(df, df_logos, by = c(`Programming Language` = \"lenguaje\"))\ndf_final &lt;- df_final %&gt;% mutate(Logo = logo, .after = `Programming Language`)\ndf_final &lt;- df_final %&gt;% select(-5)\n\nminimal_table_prueba &lt;- gt(df_final) %&gt;% \n  gtExtras::gt_plt_dot(column = cuota, category_column = `Programming Language`,  max_value = NULL, palette = colores ) %&gt;% \n  gtExtras::gt_theme_nytimes() %&gt;% \n  tab_header(title = \"Lenguajes de programación más populares\",\n             subtitle = \"Según el índice TIOBE.\") %&gt;% \n  cols_width(`Programming Language` ~ px(368), 3 ~ px(30)) %&gt;%\n  gtExtras::gt_img_rows(columns = Logo, img_source = 'web')\n\nminimal_table_prueba\n\n\n\n\n\n\n  \n    \n    \n    \n    \n  \n  \n    \n      Lenguajes de programación más populares\n    \n    \n      Según el índice TIOBE.\n    \n    \n      Dec 2023\n      Programming Language\n      Logo\n      cuota\n    \n  \n  \n    1\n\n  \n    Python\n    \n    \n  \n  \n    \n  \n\n\n13.86\n    2\n\n  \n    C\n    \n    \n  \n  \n    \n  \n\n\n11.44\n    3\n\n  \n    C++\n    \n    \n  \n  \n    \n  \n\n\n10.01\n    4\n\n  \n    Java\n    \n    \n  \n  \n    \n  \n\n\n7.99\n    5\n\n  \n    C#\n    \n    \n  \n  \n    \n  \n\n\n7.30\n    6\n\n  \n    JavaScript\n    \n    \n  \n  \n    \n  \n\n\n2.90\n    7\n\n  \n    PHP\n    \n    \n  \n  \n    \n  \n\n\n2.01\n    8\n\n  \n    Visual Basic\n    \n    \n  \n  \n    \n  \n\n\n1.82\n    9\n\n  \n    SQL\n    \n    \n  \n  \n    \n  \n\n\n1.61\n    10\n\n  \n    Assembly language\n    \n    \n  \n  \n    \n  \n\n\n1.11\n    11\n\n  \n    Scratch\n    \n    \n  \n  \n    \n  \n\n\n1.08\n    12\n\n  \n    Fortran\n    \n    \n  \n  \n    \n  \n\n\n1.07\n    13\n\n  \n    Go\n    \n    \n  \n  \n    \n  \n\n\n1.03\n    14\n\n  \n    MATLAB\n    \n    \n  \n  \n    \n  \n\n\n0.93\n    15\n\n  \n    Kotlin\n    \n    \n  \n  \n    \n  \n\n\n0.92\n    16\n\n  \n    Delphi/Object Pascal\n    \n    \n  \n  \n    \n  \n\n\n0.92\n    17\n\n  \n    Swift\n    \n    \n  \n  \n    \n  \n\n\n0.82\n    18\n\n  \n    Rust\n    \n    \n  \n  \n    \n  \n\n\n0.80\n    19\n\n  \n    Ruby\n    \n    \n  \n  \n    \n  \n\n\n0.77\n    20\n\n  \n    R\n    \n    \n  \n  \n    \n  \n\n\n0.72\n  \n  \n  \n\n\n\n\n\n\n\n\nCódigo\ndf_2 &lt;- long_term_history()\ndf_2 &lt;- df_2 %&gt;% pivot_longer(cols = 2:9, names_to = \"año\", values_to = \"posicion\")\ndf_2 &lt;- df_2 %&gt;% mutate(posicion =  as.numeric(posicion),\n                        año = as.numeric(año))\n\ndf_python &lt;- df_2 %&gt;% filter(`Programming Language` == \"Python\")\ndf_c &lt;- df_2 %&gt;% filter(`Programming Language` == \"C\")\ndf_cplus &lt;- df_2 %&gt;% filter(`Programming Language` == \"C++\")\ndf_cplus &lt;- df_2 %&gt;% filter(`Programming Language` == \"C++\")\ndf_java &lt;- df_2 %&gt;% filter(`Programming Language` == \"Java\")\ndf_javasc &lt;- df_2 %&gt;% filter(`Programming Language` == \"JavaScript\")\ndf_csharp &lt;- df_2 %&gt;% filter(`Programming Language` == \"C#\")\ndf_csharp &lt;- df_2 %&gt;% filter(`Programming Language` == \"C#\")\ndf_php &lt;- df_2 %&gt;% filter(`Programming Language` == \"PHP\")\ndf_vb &lt;- df_2 %&gt;% filter(`Programming Language` == \"Visual Basic\")\ndf_sql &lt;- df_2 %&gt;% filter(`Programming Language` == \"SQL\")\ndf_asm &lt;- df_2 %&gt;% filter(`Programming Language` == \"Assembly language\")\n\n\ndf_evolucion &lt;- highchart() %&gt;%\n  hc_chart(type = \"line\", backgroundColor = \"white\") %&gt;%\n  hc_add_series(df_python, \"line\", hcaes(año, posicion), name = \"Python\") %&gt;%\n  hc_add_series(df_c, \"line\", hcaes(año, posicion), name = \"C\") %&gt;%\n  hc_add_series(df_cplus, \"line\", hcaes(año, posicion), name = \"C++\") %&gt;%\n  hc_add_series(df_java, \"line\", hcaes(año, posicion), name = \"Java\") %&gt;%\n  hc_add_series(df_javasc, \"line\", hcaes(año, posicion), name = \"JavaScript\") %&gt;%\n  hc_add_series(df_csharp, \"line\", hcaes(año, posicion), name = \"C#\") %&gt;%\n  hc_add_series(df_php, \"line\", hcaes(año, posicion), name = \"PHP\") %&gt;%\n  hc_add_series(df_vb, \"line\", hcaes(año, posicion), name = \"Visual Basic\") %&gt;%\n  hc_add_series(df_sql, \"line\", hcaes(año, posicion), name = \"SQL\") %&gt;%\n  hc_add_series(df_asm, \"line\", hcaes(año, posicion), name = \"Assembly Language\") %&gt;%\n  hc_title(text = \"Evolución del Top 10 lenguajes de programación\",\n           style = list(fontWeight = \"bold\",\n                        color = \"#333\")) %&gt;%\n  hc_xAxis(title = list(text = NULL)) %&gt;%\n  hc_yAxis(title = list(text = \"Posición índice TIOBE\")) %&gt;%\n  hc_yAxis(reversed = TRUE) %&gt;%\n  hc_tooltip(pointFormat = \"({point.x}, {point.y})\") \n\ndf_evolucion"
  },
  {
    "objectID": "my_slides_BigData.html#análisis-del-índice-tiobe-1",
    "href": "my_slides_BigData.html#análisis-del-índice-tiobe-1",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "1. Análisis del índice TIOBE",
    "text": "1. Análisis del índice TIOBE\n\nMejor lenguaje de cada añoNº premios a mejor lenguaje\n\n\n\n\nCódigo\n\ndf_3 &lt;-hall_of_fame()\n\ndf_logo &lt;- data.frame(lenguaje = c(2022:2003),\n                      logo = c(\"https://th.bing.com/th?id=OIP.H3I3buZeC8Bkez8ADSrqMwHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&w=233&h=268&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&w=233&h=268&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&w=306&h=204&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP._Lm_T3scKhVEVFC54gcRxwHaE8&w=306&h=204&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.Y4VPmWW2m4_V2WFYOEGYRgHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://www.bing.com/th?id=OIP.LN_XZYfNR1okCsPl0pzIqQAAAA&w=114&h=100&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.rI4h3ndENsvdOwunJgW4aQAAAA&w=212&h=212&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.rI4h3ndENsvdOwunJgW4aQAAAA&w=212&h=212&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&w=306&h=204&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&w=233&h=268&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.MWdAq1cI3bRY5--dtqIwJwHaHY&w=250&h=249&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP._Lm_T3scKhVEVFC54gcRxwHaE8&w=306&h=204&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uhYWKsUDBf1rPMjzWZx3OgHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.H3I3buZeC8Bkez8ADSrqMwHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\"))\n\ndf_gt &lt;- left_join(df_logo,df_3, by = c(\"lenguaje\" = \"Year\")) %&gt;%\n  rename(Year = lenguaje)\ndf_gt &lt;- df_gt %&gt;% rename(Año = Year,\n                          Ganador = Winner)\n\n\n\ntabla_hallfame &lt;- gt(df_gt) %&gt;%\n  gtExtras::gt_color_rows( Año,palette = \"viridis\", pal_type = \"continuous\") %&gt;%\n  gtExtras::gt_img_rows(columns = logo, img_source = 'web') %&gt;%\n  tab_header(title = \"Mejor lenguaje de programación de cada año\",\n             subtitle = \"Según el índice TIOBE\") %&gt;%\n  gtExtras::gt_theme_538()\n\ntabla_hallfame\n\n\n\n\n\n\n  \n    \n      Mejor lenguaje de programación de cada año\n    \n    \n      Según el índice TIOBE\n    \n    \n      Año\n      logo\n      Ganador\n    \n  \n  \n    2022\n\nC++\n    2021\n\nPython\n    2020\n\nPython\n    2019\n\nC\n    2018\n\nPython\n    2017\n\nC\n    2016\n\nGo\n    2015\n\nJava\n    2014\n\nJavaScript\n    2013\n\nTransact-SQL\n    2012\n\nObjective-C\n    2011\n\nObjective-C\n    2010\n\nPython\n    2009\n\nGo\n    2008\n\nC\n    2007\n\nPython\n    2006\n\nRuby\n    2005\n\nJava\n    2004\n\nPHP\n    2003\n\nC++\n  \n  \n  \n\n\n\n\n\n\n\n\nCódigo\ndf_3 &lt;-hall_of_fame()\n\ndf_3 &lt;- df_3 %&gt;% rename( Ganador = `Winner`) %&gt;%\n  group_by(Ganador) %&gt;%\n  count(n()) %&gt;%\n  select(1,3) %&gt;%\n  rename(numero_premios = n )\n\n\np_winners &lt;- ggplot()+ \n  geom_bar(data = df_3, aes(x = fct_reorder(Ganador, numero_premios), y = numero_premios ,fill = Ganador), stat = \"identity\") + \n  theme_clean() + \n  labs(title = \"Número de premios a Mejor Lenguaje del año\",\n       caption = \"Fuente: Elaboración propia a partir del índice TIOBE\",\n       y = NULL,\n       x = NULL) + \n  theme(legend.position = \"none\",\n        axis.text.y = element_text(size = 12, face = \"bold\")) +\n  scale_fill_brewer(palette = \"Paired\") + coord_flip()\n\np_winners"
  },
  {
    "objectID": "my_slides_BigData.html#encuesta-stack-over-flow",
    "href": "my_slides_BigData.html#encuesta-stack-over-flow",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "2.Encuesta Stack Over Flow",
    "text": "2.Encuesta Stack Over Flow\n\n¿Con qué lenguajes suelen comenzar los jóvenes?Lenguaje más popular por grupo de edad\n\n\n\n\nCódigo\nlibrary(tidyverse)\nlibrary(rio)\nlibrary(tidyr)\nlibrary(here)\n\nmy_ruta &lt;- here::here(\"datos\", \"survey_results_public.csv\")\ndf &lt;- rio::import(my_ruta)\ndf &lt;- df %&gt;%  #Nos quedamos solo con dos variables y hacemos una observación por cada fila.\n  select(Age , LanguageHaveWorkedWith) %&gt;% \n  separate_rows(LanguageHaveWorkedWith, sep = \";\\\\s*\")\n\ndf1 &lt;- df %&gt;% filter(Age == \"18-24 years old\") %&gt;% \n  filter(!is.na(LanguageHaveWorkedWith)) %&gt;% \n  group_by(LanguageHaveWorkedWith) %&gt;%\n  summarise(Observaciones = n()) %&gt;% \n  top_n(10, Observaciones) %&gt;% \n  arrange\n\n\ncolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\",\"#33FF99\",\"#95a5a6\", \"#FFCCFF\")\n\ndiez_mas_usados &lt;- ggplot(df1, aes(x = reorder(LanguageHaveWorkedWith, Observaciones), y = Observaciones)) +\n  geom_bar(stat = \"identity\", fill = colores) +\n  labs(title = \"Top 10 Lenguajes de Programación para Personas de 18-24 años\",\n       x = \"Lenguajes de Programación\",\n       y = \"Número de Observaciones\") +\n  theme_minimal() +\n  theme(axis.title = element_blank(),\n        axis.text.x = element_text(size = 8, angle = 45, hjust = 1),\n        axis.text.y = element_text(size = 8),\n        plot.title = element_text(size = 12, face = \"bold\"),\n        plot.subtitle = element_text(size = 10)) +\n  labs(title = \"Lenguajes de programación con los que se inician los jóvenes\",\n       subtitle = \"medido en número de respuestas a la encuesta\",\n       caption = \"Fuente: encuesta anual de Stack Overflow\") +\n  guides(fill = FALSE) + # Eliminar la leyenda de la estética fill\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ndiez_mas_usados\n\n\n\n\n\n\n\n\n\n\n\n\n\nCódigo\n#Cargamos librerías\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(RColorBrewer)\n\ndf2 &lt;- df %&gt;%\n  filter(!is.na(LanguageHaveWorkedWith)) %&gt;%\n  group_by(Age, LanguageHaveWorkedWith) %&gt;%\n  summarise(Observaciones = n()) %&gt;%\n  group_by(Age) %&gt;%\n  top_n(1, Observaciones) %&gt;%\n  arrange(Age, desc(Observaciones)) %&gt;% \n  select(-Observaciones) %&gt;% \n  rename(lenguaje = LanguageHaveWorkedWith)\n\ndf_logos &lt;- data.frame(lenguaje = c(\"Python\", \"C\", \"C++\", \"Java\", \"C#\", \"JavaScript\", \"PHP\", \"Visual Basic\", \"SQL\", \"Assembly language\", \"Scratch\", \"Fortran\", \"Go\", \"MATLAB\", \"Kotlin\", \"Delphi/Object Pascal\", \"Swift\",\"Ruby\",\"R\",\"Rust\", \"Golang\"),\n                       logo = c(\"https://tse4.mm.bing.net/th?id=OIP.EDJ9xoErBbZqK2tExVoJfAAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&pid=Api&rs=1&c=1&qlt=95&w=103&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.ggb-3B-8LRfbgS0lPLYNxwHaIU&pid=Api&rs=1&c=1&qlt=95&w=105&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.dJ7A1hPb-BDRBrhOmhrVAgHaHa&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.2x1yN8k3MVCrkJFR_C5k-wHaIp&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.YPYdVAg5ieRspLI6HIpmDQHaIB&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.pkqphAig1t-PCsy4dkVrfAHaD5&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.Y224uoZnCs8yY0Sos_h4cQHaDd&pid=Api&rs=1&c=1&qlt=95&w=258&h=120\",\"https://tse4.mm.bing.net/th?id=OIP.S_9pgiKacbi3FxPKxDmusgHaFy&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.v5m2HW3FI3RbopnK8Cs6HgAAAA&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.bHt6sdtkwUqP91oPKlruGgHaEM&pid=Api&P=0&h=180\",\"https://tse2.explicit.bing.net/th?id=OIP.tLfIejOZiP_H0Zse0NIn2QAAAA&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.cI8KflTKlnmraGFa22XpKQHaEK&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.gW_YaXsZmuSntd_sy5zkIwHaHa&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.hEP7hOlvIzhKU1fGpizd7QAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.XozeB5BRQSzNCO6k7om62QHaHa&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.2BwE10YiTSXRrnW2LnVh8wHaHa&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.0rg-o4mEzLO5EHJ1zS52YwHaGe&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.YmPfYoQK3WvGEjFXusKV9QHaHa&pid=Api&P=0&h=180\", \"https://seeklogo.com/images/G/go-logo-046185B647-seeklogo.com.png\"))\ndf2_final &lt;- left_join(df2, df_logos, by = (\"lenguaje\"))\n#El data.frame daba problemas así que lo he rehecho con un poco de ayuda de R base.\nages &lt;- df2_final$Age\nlenguajes &lt;- df2_final$lenguaje\nlogos &lt;- df2_final$logo\ndataframef2_final &lt;- data.frame(ages, lenguajes, logos)\n\ngt_tbl &lt;- dataframef2_final %&gt;%\n  gt() %&gt;% \n  gtExtras::gt_theme_espn() %&gt;%\n  cols_width(\"lenguajes\" ~ px(100), \"logos\" ~ px(80)) %&gt;% \n  tab_header(title = \"Lenguajes de programación más populares por franjas de edad\",\n             subtitle = \"Según la encuesta anual de Stack Overflow.\")%&gt;%\n  gtExtras::gt_img_rows(columns = logos, img_source = 'web')\n\ngt_tbl\n\n\n\n\n\n\n  \n    \n    \n    \n  \n  \n    \n      Lenguajes de programación más populares por franjas de edad\n    \n    \n      Según la encuesta anual de Stack Overflow.\n    \n    \n      ages\n      lenguajes\n      logos\n    \n  \n  \n    18-24 years old\nJavaScript\n\n    25-34 years old\nJavaScript\n\n    35-44 years old\nJavaScript\n\n    45-54 years old\nJavaScript\n\n    55-64 years old\nSQL\n\n    65 years or older\nSQL\n\n    Prefer not to say\nJavaScript\n\n    Under 18 years old\nPython"
  },
  {
    "objectID": "my_slides_BigData.html#encuesta-stack-over-flow-1",
    "href": "my_slides_BigData.html#encuesta-stack-over-flow-1",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "2.Encuesta Stack Over Flow",
    "text": "2.Encuesta Stack Over Flow\n\n¿Cómo se aprende programación?Lenguajes de programación con mayores salarios\n\n\n\nmy_ruta &lt;- here::here(\"datos\", \"survey_results_public.csv\")\ndf &lt;- rio::import(my_ruta)\ndf &lt;- df %&gt;% \n  select(LearnCode) %&gt;% \n  rename(learn=LearnCode) %&gt;% \n  separate_rows(learn, sep = \";\\\\s*\") %&gt;% \n  drop_na() %&gt;% \n  group_by(learn) %&gt;% \n  summarise(Observaciones = n()) %&gt;% \n  arrange(desc(Observaciones)) %&gt;% \n  filter(learn != \"Other (please specify):\")\n\ncolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\",\"#33FF99\", \"#FFCCFF\")\ngt_df &lt;- gt(df) %&gt;%\n  gtExtras::gt_plt_dot(column = \"Observaciones\", category_column = `learn`,  \n                       max_value = NULL, palette = colores) %&gt;%\n  gtExtras::gt_theme_nytimes() %&gt;%\n  cols_width(`learn` ~ px(400), 2 ~ px(150)) %&gt;% \n  tab_header(title = \"Maneras más usuales que se usan para aprender programación\",\n             subtitle = \"Según la encuesta anual de Stack Overflow.\")\ngt_df\n\n\n\n\n\n  \n    \n    \n  \n  \n    \n      Maneras más usuales que se usan para aprender programación\n    \n    \n      Según la encuesta anual de Stack Overflow.\n    \n    \n      learn\n      Observaciones\n    \n  \n  \n    \n  \n    Other online resources (e.g., videos, blogs, forum)\n    \n    \n  \n  \n    \n  \n\n70244\n    \n  \n    Books / Physical media\n    \n    \n  \n  \n    \n  \n\n45406\n    \n  \n    School (i.e., University, College, etc)\n    \n    \n  \n  \n    \n  \n\n43957\n    \n  \n    Online Courses or Certification\n    \n    \n  \n  \n    \n  \n\n43201\n    \n  \n    On the job training\n    \n    \n  \n  \n    \n  \n\n40380\n    \n  \n    Colleague\n    \n    \n  \n  \n    \n  \n\n20523\n    \n  \n    Friend or family member\n    \n    \n  \n  \n    \n  \n\n9936\n    \n  \n    Coding Bootcamp\n    \n    \n  \n  \n    \n  \n\n8602\n    \n  \n    Hackathons (virtual or in-person)\n    \n    \n  \n  \n    \n  \n\n7033\n  \n  \n  \n\n\n\n\n\n\n\nmy_ruta2 &lt;- here::here(\"datos\",\"lista_lenguajes_mejor_pagados.xlsx\")\naa &lt;- rio::import(my_ruta2)\naa &lt;- aa %&gt;% select(-\"Number of Jobs\")\ndf_logos &lt;- data.frame(lenguaje = c(\"Python\", \"C\", \"C++\", \"Java\", \"C#\", \"JavaScript\", \"PHP\", \"Visual Basic\", \"SQL\", \"Assembly language\", \"Scratch\", \"Fortran\", \"Go\", \"MATLAB\", \"Kotlin\", \"Delphi/Object Pascal\", \"Swift\",\"Ruby\",\"R\",\"Rust\", \"Golang\"),\n                       logo = c(\"https://tse4.mm.bing.net/th?id=OIP.EDJ9xoErBbZqK2tExVoJfAAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&pid=Api&rs=1&c=1&qlt=95&w=103&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.ggb-3B-8LRfbgS0lPLYNxwHaIU&pid=Api&rs=1&c=1&qlt=95&w=105&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.dJ7A1hPb-BDRBrhOmhrVAgHaHa&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.2x1yN8k3MVCrkJFR_C5k-wHaIp&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.YPYdVAg5ieRspLI6HIpmDQHaIB&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.pkqphAig1t-PCsy4dkVrfAHaD5&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.Y224uoZnCs8yY0Sos_h4cQHaDd&pid=Api&rs=1&c=1&qlt=95&w=258&h=120\",\"https://tse4.mm.bing.net/th?id=OIP.S_9pgiKacbi3FxPKxDmusgHaFy&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.v5m2HW3FI3RbopnK8Cs6HgAAAA&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.bHt6sdtkwUqP91oPKlruGgHaEM&pid=Api&P=0&h=180\",\"https://tse2.explicit.bing.net/th?id=OIP.tLfIejOZiP_H0Zse0NIn2QAAAA&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.cI8KflTKlnmraGFa22XpKQHaEK&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.gW_YaXsZmuSntd_sy5zkIwHaHa&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.hEP7hOlvIzhKU1fGpizd7QAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.XozeB5BRQSzNCO6k7om62QHaHa&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.2BwE10YiTSXRrnW2LnVh8wHaHa&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.0rg-o4mEzLO5EHJ1zS52YwHaGe&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.YmPfYoQK3WvGEjFXusKV9QHaHa&pid=Api&P=0&h=180\", \"https://seeklogo.com/images/G/go-logo-046185B647-seeklogo.com.png\"))\nmy_ruta2 &lt;- here::here(\"datos\",\"lista_lenguajes_mejor_pagados.xlsx\")\naa &lt;- rio::import(my_ruta2)\naa &lt;- aa %&gt;% select(-\"Number of Jobs\") %&gt;% \n  rename(lenguaje = Language)\ndf_final &lt;- left_join(aa, df_logos, by = (\"lenguaje\"))\n\ncolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\",\"#33FF99\",\"#95a5a6\", \"#FFCCFF\")\n\ngt_salarios &lt;- gt(df_final) %&gt;%\n  gtExtras::gt_plt_dot(column = \"Median Salary ($)\", category_column = `lenguaje`,  \n                       max_value = NULL, palette = colores) %&gt;%\n  gtExtras::gt_theme_espn() %&gt;%\n  cols_width(`lenguaje` ~ px(400), 3 ~ px(80)) %&gt;% \n  tab_header(title = \"Lenguajes de programación con mejores salarios\",\n             subtitle = \"Según la web 4 day week.\") %&gt;%\n  gtExtras::gt_img_rows(columns = logo, img_source = 'web')\ngt_salarios\n\n\n\n\n\n  \n    \n    \n    \n  \n  \n    \n      Lenguajes de programación con mejores salarios\n    \n    \n      Según la web 4 day week.\n    \n    \n      lenguaje\n      Median Salary ($)\n      logo\n    \n  \n  \n    \n  \n    Swift\n    \n    \n  \n  \n    \n  \n\n116000\n\n    \n  \n    Python\n    \n    \n  \n  \n    \n  \n\n105000\n\n    \n  \n    Golang\n    \n    \n  \n  \n    \n  \n\n100000\n\n    \n  \n    C++\n    \n    \n  \n  \n    \n  \n\n100000\n\n    \n  \n    Java\n    \n    \n  \n  \n    \n  \n\n95000\n\n    \n  \n    Ruby\n    \n    \n  \n  \n    \n  \n\n95000\n\n    \n  \n    Rust\n    \n    \n  \n  \n    \n  \n\n88000\n\n    \n  \n    SQL\n    \n    \n  \n  \n    \n  \n\n85000"
  },
  {
    "objectID": "my_slides_BigData.html#programación-en-economía",
    "href": "my_slides_BigData.html#programación-en-economía",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "3. Programación en Economía",
    "text": "3. Programación en Economía\n\nModelo estocástico neoclásico de crecimientoResultados del paper\n\n\nDon Jesús “filtro de partículas” Fernández-Villaverde analiza la velocidad de computación de distintos lenguajes, estimando un mismo modelo en los diversos lenguajes1. \nUn planificador social tiene que maximizar un función de valor escogiendo una combinación de consumo \\(c_t\\) y capital \\(k_t\\) : \\[\\max_{\\{c_t, k_t+1\\}}\\mathbb{E}_0\\sum_{t=0}^{\\infty}(1 - \\beta)\\beta^t\\log c_t\\]\nBajo la siguiente restricción presupuestaria: \\[c_t + k_{t+1} = z_tk_{t}^\\alpha + (1 - \\delta)k_t\\] El problema a maximizar será: \\[V(k,z) = \\max_{k'}(1 - \\beta)\\beta^t\\log(zk^\\alpha-k')+\\beta\\mathbb{E}[V(k',z')|z]\\]\n\n\n\n\nCódigo\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(ggthemes)\n\nex_times &lt;- readxl::read_excel(\"./datos/execution_times.xlsx\") #-importamos la tabla del pdf del paper a una hoja de cálculo, la cargamos, y ya trabajamos con ella en R\n\nex_times &lt;- ex_times %&gt;%  \n  select(1, 4) %&gt;% \n  na.omit() \n\ncolnames(ex_times) &lt;- c(\"Lenguajes\", \"times\")\nex_times &lt;- ex_times[2:9,] \n\nex_times &lt;- ex_times %&gt;% \n  mutate(times = parse_number(times))\n\nex_times &lt;- ex_times %&gt;%\n  mutate(category = case_when(\n    as.numeric(times) &lt; 3 ~ \"Menos de 3 seg\",\n    as.numeric(times) &gt;= 3 & as.numeric(times) &lt; 60 ~ \"Entre 3 y 60 seg\",\n    as.numeric(times) &gt;= 60 ~ \"Más de 60 seg\",\n    TRUE ~ NA_character_)) \n\nex_times$factor_cat &lt;- as.factor(ex_times$category)\norden_correcto &lt;- c(\"Menos de 3 seg\", \"Entre 3 y 60 seg\", \"Más de 60 seg\")\nex_times$factor_cat &lt;- factor(ex_times$category, levels = orden_correcto)\n\nex_times_plot &lt;- ex_times %&gt;% \n  ggplot() +\n  aes(x = Lenguajes, y = times, fill = Lenguajes)  +\n  geom_bar(stat = \"identity\") +\n  facet_wrap(~factor_cat, scales = \"free\") +\n  theme_stata(scheme = \"s1color\") +\n  labs(title = \"Tiempos de ejecución del modelo\", x = \"\", y = \"Tiempo en segundos\")\n\nex_times_plot\n\n\n\n\n\n\n\n\n\n\n\n\n“Aruoba, S. B., & Fernández-Villaverde, J. (2015). A comparison of programming languages in macroeconomics. Journal of Economic Dynamics and Control, 58, 265-273.”"
  },
  {
    "objectID": "my_slides_BigData.html#programación-en-economía-1",
    "href": "my_slides_BigData.html#programación-en-economía-1",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "3.Programación en Economía",
    "text": "3.Programación en Economía\n\nUna miqueta de EconometríaGráfico de los residuosAutocorrelación\n\n\n\n\nCódigo\n#Modelo econométrico ----------\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(reshape2)\nlibrary(stargazer)\nlibrary(vembedr)\nlibrary(jtools)\n\ndf &lt;- read.csv(\"./datos/FebPwtExport12152023.csv\")\n#- pasamos los datos a formato wide\ndf &lt;- dcast(df, RegionCode + YearCode ~ VariableCode, value.var = \"AggValue\")\n#- cambiamos el nombre a uno más familiar y creamos la variable trabajo y filtramos los datos a partir del 78\ndf &lt;- df %&gt;% \n  mutate(l = avh*emp) %&gt;% \n  rename(k = rnna,\n         pib = rgdpna,\n         year = YearCode) %&gt;% \n  filter(year &gt;= 1960)\n\nmodelo &lt;- lm(log(pib) ~ log(l) + log(k), data = df)\nmodelo\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = log(pib) ~ log(l) + log(k), data = df)\n#&gt; \n#&gt; Coefficients:\n#&gt; (Intercept)       log(l)       log(k)  \n#&gt;      0.1125       0.2124       0.7473\nsumm(modelo)\n\n\n\n\n\n\nObservations\n60\n\n\nDependent variable\nlog(pib)\n\n\nType\nOLS linear regression\n\n\n\n\n\n\n\n\nF(2,57)\n5635.32\n\n\nR²\n0.99\n\n\nAdj. R²\n0.99\n\n\n\n\n\n\n\n\n\nEst.\nS.E.\nt val.\np\n\n\n\n\n(Intercept)\n0.11\n0.37\n0.30\n0.76\n\n\nlog(l)\n0.21\n0.04\n5.22\n0.00\n\n\nlog(k)\n0.75\n0.01\n90.37\n0.00\n\n\n\n Standard errors: OLS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCódigo\ndf_residuos &lt;- data.frame(x = lag(resid(modelo)), y = resid(modelo)) %&gt;% \n  na.omit()\n\nautocorrelacion &lt;- df_residuos %&gt;% \n  ggplot() +\n  geom_point(color = \"red\") +\n  aes(x = x, y = y) +\n  labs(title = \"Dispersión de los residuos del modelo\", \n       x = \"Residuos rezagados\",\n       y = \"Residuos\") +\n  theme_clean() + \n  geom_smooth(se = FALSE, method = lm)\nautocorrelacion\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\nCódigo\nautocorrelación_plot &lt;- df %&gt;% \n  ggplot() + \n  geom_point(color = \"#5D8AA8\") +\n  geom_line(color = \"#69b3a2\") +\n  aes(x = year, y = resid(modelo)) +\n  labs(title = \"Residuos del modelo\", \n       x = \"Año\",\n       y = \"Residuos\") +\n  geom_hline(yintercept = 0, color = \"orange\", size=.5) +\n  theme_classic()\nautocorrelación_plot"
  },
  {
    "objectID": "my_slides_BigData.html#section",
    "href": "my_slides_BigData.html#section",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "",
    "text": "Índice\n\n\nIntroducción\n\n1.Análisis del índice TIOBE\n\nLenguajes de programación mas populares\nEvolución del top 10 lenguajes\nMejor lenguaje de cada año\nNúmero de premios a mejor lenguajes\n\n2.Estudio sobre la encuesta anual de Stack Over Flow\n\n¿Con que lenguaje suelen iniciarse los jóvenes?\nLenguajes más populares por franja de edad\nMétodos más comunes para aprender programación\nLenguajes de programación mejor remunerados\n\n3.Aplicación de la programación para la ciencia económica\n\nModelo estocástico neoclásico de crecimiento\nResultados del modelo\nUna miqueta de Econometría"
  },
  {
    "objectID": "my_slides_BigData.html#section-2",
    "href": "my_slides_BigData.html#section-2",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "",
    "text": "library(vembedr)\n#| echo = FALSE,\n#| out.width = \"100%\"\nembed_url(\"https://www.youtube.com/watch?v=zA52uNzx7Y4&ab_channel=malawolf85\")\n\n\n\n\n\n\n\n\n\n\nSlides hechas con Quarto"
  },
  {
    "objectID": "my_trabajo_BigData.html#gráfico",
    "href": "my_trabajo_BigData.html#gráfico",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "Gráfico",
    "text": "Gráfico\n\nCódigotabla_tiobe\n\n\n\n\n\n\n\n\n\n\n\n\n\nLenguajes de programación más populares\n    \n\nSegún el índice TIOBE.\n    \n\nDec 2023\n      Programming Language\n      Logo\n      cuota\n    \n\n\n\n1\n\n  \n    Python\n    \n    \n  \n  \n    \n  \n\n\n13.86\n\n\n2\n\n  \n    C\n    \n    \n  \n  \n    \n  \n\n\n11.44\n\n\n3\n\n  \n    C++\n    \n    \n  \n  \n    \n  \n\n\n10.01\n\n\n4\n\n  \n    Java\n    \n    \n  \n  \n    \n  \n\n\n7.99\n\n\n5\n\n  \n    C#\n    \n    \n  \n  \n    \n  \n\n\n7.30\n\n\n6\n\n  \n    JavaScript\n    \n    \n  \n  \n    \n  \n\n\n2.90\n\n\n7\n\n  \n    PHP\n    \n    \n  \n  \n    \n  \n\n\n2.01\n\n\n8\n\n  \n    Visual Basic\n    \n    \n  \n  \n    \n  \n\n\n1.82\n\n\n9\n\n  \n    SQL\n    \n    \n  \n  \n    \n  \n\n\n1.61\n\n\n10\n\n  \n    Assembly language\n    \n    \n  \n  \n    \n  \n\n\n1.11\n\n\n11\n\n  \n    Scratch\n    \n    \n  \n  \n    \n  \n\n\n1.08\n\n\n12\n\n  \n    Fortran\n    \n    \n  \n  \n    \n  \n\n\n1.07\n\n\n13\n\n  \n    Go\n    \n    \n  \n  \n    \n  \n\n\n1.03\n\n\n14\n\n  \n    MATLAB\n    \n    \n  \n  \n    \n  \n\n\n0.93\n\n\n15\n\n  \n    Kotlin\n    \n    \n  \n  \n    \n  \n\n\n0.92\n\n\n16\n\n  \n    Delphi/Object Pascal\n    \n    \n  \n  \n    \n  \n\n\n0.92\n\n\n17\n\n  \n    Swift\n    \n    \n  \n  \n    \n  \n\n\n0.82\n\n\n18\n\n  \n    Rust\n    \n    \n  \n  \n    \n  \n\n\n0.80\n\n\n19\n\n  \n    Ruby\n    \n    \n  \n  \n    \n  \n\n\n0.77\n\n\n20\n\n  \n    R\n    \n    \n  \n  \n    \n  \n\n\n0.72\n\n\n\n\n\n\n:::\n\nEn el siguiente gráfico1 podemos observar una evolución comparada del top 10 lenguajes de programación. La mayoría de programas(C, C++, Java, JavaScript, etc) se han mantenido en el top 10 desde los inicios de la serie, sin embargo, es especialmente interesante la evolucion de dos lenguajes: Python y SQL.\nComo ya bien sabemos Python es posiblemente el GOAT en cuanto a lenguajes de programación y se puede observar en su ascenso en el ranking desde la posición 22 en el año 1993 a ser el número 1 en 2023.\nPor otro lado, a pesar de que SQL(Structure Query Language) es un lenguaje antiguo, se introdujo en el índice por primera vez en 2003(manteniéndose por tan solo un año) y no volvió a entrar en el índice hasta el año 2018. Desde entonces ha tenido un crecimiento sin precedentes debido debido al boom del BigData ya que este lenguaje permite manipular, obtener datos e incluso crear bases de datos. SQL es utilizado en todos aquellos sectores donde sea necesario manejar datos y empresas como Spotify o Facebook lo utilizan para almacenar información de sus usuarios.\n\n\nCódigo\nCódigo\n\n\n\n\nCódigodf_2 &lt;- long_term_history()\ndf_2 &lt;- df_2 %&gt;% pivot_longer(cols = 2:9, names_to = \"año\", values_to = \"posicion\")\ndf_2 &lt;- df_2 %&gt;% mutate(posicion =  as.numeric(posicion),\n                        año = as.numeric(año))\n\ndf_python &lt;- df_2 %&gt;% filter(`Programming Language` == \"Python\")\ndf_c &lt;- df_2 %&gt;% filter(`Programming Language` == \"C\")\ndf_cplus &lt;- df_2 %&gt;% filter(`Programming Language` == \"C++\")\ndf_cplus &lt;- df_2 %&gt;% filter(`Programming Language` == \"C++\")\ndf_java &lt;- df_2 %&gt;% filter(`Programming Language` == \"Java\")\ndf_javasc &lt;- df_2 %&gt;% filter(`Programming Language` == \"JavaScript\")\ndf_csharp &lt;- df_2 %&gt;% filter(`Programming Language` == \"C#\")\ndf_csharp &lt;- df_2 %&gt;% filter(`Programming Language` == \"C#\")\ndf_php &lt;- df_2 %&gt;% filter(`Programming Language` == \"PHP\")\ndf_vb &lt;- df_2 %&gt;% filter(`Programming Language` == \"Visual Basic\")\ndf_sql &lt;- df_2 %&gt;% filter(`Programming Language` == \"SQL\")\ndf_asm &lt;- df_2 %&gt;% filter(`Programming Language` == \"Assembly language\")\n\n\nplot_top &lt;- highchart() %&gt;%\n  hc_chart(type = \"line\") %&gt;%\n  hc_add_series(df_python, \"line\", hcaes(año, posicion), name = \"Python\") %&gt;%\n  hc_add_series(df_c, \"line\", hcaes(año, posicion), name = \"C\") %&gt;%\n  hc_add_series(df_cplus, \"line\", hcaes(año, posicion), name = \"C++\") %&gt;%\n  hc_add_series(df_java, \"line\", hcaes(año, posicion), name = \"Java\") %&gt;%\n  hc_add_series(df_javasc, \"line\", hcaes(año, posicion), name = \"JavaScript\") %&gt;%\n  hc_add_series(df_csharp, \"line\", hcaes(año, posicion), name = \"C#\") %&gt;%\n  hc_add_series(df_php, \"line\", hcaes(año, posicion), name = \"PHP\") %&gt;%\n  hc_add_series(df_vb, \"line\", hcaes(año, posicion), name = \"Visual Basic\") %&gt;%\n  hc_add_series(df_sql, \"line\", hcaes(año, posicion), name = \"SQL\") %&gt;%\n  hc_add_series(df_asm, \"line\", hcaes(año, posicion), name = \"Assembly Language\") %&gt;%\n  hc_title(text = \"Evolución del Top 10 lenguajes de programación\",\n           style = list(fontWeight = \"bold\",\n                        color = \"#333\")) %&gt;%\n  hc_xAxis(title = list(text = NULL)) %&gt;%\n  hc_yAxis(title = list(text = \"Posición índice TIOBE\")) %&gt;%\n  hc_yAxis(reversed = TRUE) %&gt;%\n  hc_tooltip(pointFormat = \"({point.x}, {point.y})\") \n\n#- plot_top\n\n\n\n\n\nCódigoplot_top\n\n\n\n\n\n\n\n\n\n\nA continuación hemos realizado una tabla con el Hall of Fame de lenguajes de programacion. En este caso la comunidad TIOBE otorga el premio de “Mejor lenguaje del año” no a aquel que mas popularidad tiene, sino a quién mayor incremento de rating ha tenido.\n\n\nCódigo\nGráfico\n\n\n\n\nCódigo\ndf_3 &lt;-hall_of_fame()\n\ndf_logo &lt;- data.frame(lenguaje = c(2022:2003),\n                      logo = c(\"https://th.bing.com/th?id=OIP.H3I3buZeC8Bkez8ADSrqMwHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&w=233&h=268&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&w=233&h=268&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&w=306&h=204&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP._Lm_T3scKhVEVFC54gcRxwHaE8&w=306&h=204&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.Y4VPmWW2m4_V2WFYOEGYRgHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://www.bing.com/th?id=OIP.LN_XZYfNR1okCsPl0pzIqQAAAA&w=114&h=100&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.rI4h3ndENsvdOwunJgW4aQAAAA&w=212&h=212&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.rI4h3ndENsvdOwunJgW4aQAAAA&w=212&h=212&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&w=306&h=204&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&w=233&h=268&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uZuulMpBtfWNUBXf8fHu1AHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.MWdAq1cI3bRY5--dtqIwJwHaHY&w=250&h=249&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP._Lm_T3scKhVEVFC54gcRxwHaE8&w=306&h=204&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.uhYWKsUDBf1rPMjzWZx3OgHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\",\"https://th.bing.com/th?id=OIP.H3I3buZeC8Bkez8ADSrqMwHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2\"))\n\ndf_gt &lt;- left_join(df_logo,df_3, by = c(\"lenguaje\" = \"Year\")) %&gt;%\n  rename(Year = lenguaje)\ndf_gt &lt;- df_gt %&gt;% rename(Año = Year,\n                          Ganador = Winner)\n\n\n\ntabla_hallfame &lt;- gt(df_gt) %&gt;%\n  gtExtras::gt_color_rows( Año,palette = \"viridis\", pal_type = \"continuous\") %&gt;%\n  gtExtras::gt_img_rows(columns = logo, img_source = 'web') %&gt;%\n  tab_header(title = \"Mejor lenguaje de programación de cada año\",\n             subtitle = \"Según el índice TIOBE\") %&gt;%\n  gtExtras::gt_theme_538()\n\n#- tabla_hallfame\n\n\n\n\n\nCódigotabla_hallfame\n\n\n\n\n\n\n\nMejor lenguaje de programación de cada año\n    \n\nSegún el índice TIOBE\n    \n\nAño\n      logo\n      Ganador\n    \n\n\n\n2022\n\nC++\n\n\n2021\n\nPython\n\n\n2020\n\nPython\n\n\n2019\n\nC\n\n\n2018\n\nPython\n\n\n2017\n\nC\n\n\n2016\n\nGo\n\n\n2015\n\nJava\n\n\n2014\n\nJavaScript\n\n\n2013\n\nTransact-SQL\n\n\n2012\n\nObjective-C\n\n\n2011\n\nObjective-C\n\n\n2010\n\nPython\n\n\n2009\n\nGo\n\n\n2008\n\nC\n\n\n2007\n\nPython\n\n\n2006\n\nRuby\n\n\n2005\n\nJava\n\n\n2004\n\nPHP\n\n\n2003\n\nC++\n\n\n\n\n\n\n\n\n\n\nPython es el lenguaje más laureado con un total de 5 premios, cifra muy superior a la del resto de sus competidores. En segundo lugar se encuentra C con 3 premios(cabe destacar que tanto Python como C son los dos lenguajes con más premios y a su vez los más populares en la actualidad). Finalmente compartiendo la última posición del podio se hayan Objective-C, Go, Java y C++ todos con 2 premios.\n\n\nCódigo\nGráfico\n\n\n\n\nCódigodf_3 &lt;-hall_of_fame()\n\ndf_3 &lt;- df_3 %&gt;% rename( Ganador = `Winner`) %&gt;%\n  group_by(Ganador) %&gt;%\n  count(n()) %&gt;%\n  select(1,3) %&gt;%\n  rename(numero_premios = n )\n\n\np_winners &lt;- ggplot()+ \n  geom_bar(data = df_3, aes(x = fct_reorder(Ganador, numero_premios), y = numero_premios ,fill = Ganador), stat = \"identity\") + \n  theme_clean() + \n  labs(title = \"Número de premios a Mejor Lenguaje del año\",\n       caption = \"Fuente: Elaboración propia a partir del índice TIOBE\",\n       y = NULL,\n       x = NULL) + \n  theme(legend.position = \"none\",\n        axis.text.y = element_text(size = 12, face = \"bold\")) +\n  scale_fill_brewer(palette = \"Paired\") + coord_flip()\n\n#- p_winners\n\n\n\n\n\nCódigop_winners"
  },
  {
    "objectID": "my_slides_BigData.html#encuesta-stack-overflow",
    "href": "my_slides_BigData.html#encuesta-stack-overflow",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "2. Encuesta Stack Overflow",
    "text": "2. Encuesta Stack Overflow\n\n¿Con qué lenguajes suelen comenzar los jóvenes?Lenguaje más popular por grupo de edad\n\n\n\n\nCódigo\nlibrary(tidyverse)\nlibrary(rio)\nlibrary(tidyr)\nlibrary(here)\n\nmy_ruta &lt;- here::here(\"datos\", \"survey_results_public.csv\")\ndf &lt;- rio::import(my_ruta)\ndf &lt;- df %&gt;%  #Nos quedamos solo con dos variables y hacemos una observación por cada fila.\n  select(Age , LanguageHaveWorkedWith) %&gt;% \n  separate_rows(LanguageHaveWorkedWith, sep = \";\\\\s*\")\n\ndf1 &lt;- df %&gt;% filter(Age == \"18-24 years old\") %&gt;% \n  filter(!is.na(LanguageHaveWorkedWith)) %&gt;% \n  group_by(LanguageHaveWorkedWith) %&gt;%\n  summarise(Observaciones = n()) %&gt;% \n  top_n(10, Observaciones) %&gt;% \n  arrange\n\n\ncolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\",\"#33FF99\",\"#95a5a6\", \"#FFCCFF\")\n\ndiez_mas_usados &lt;- ggplot(df1, aes(x = reorder(LanguageHaveWorkedWith, Observaciones), y = Observaciones)) +\n  geom_bar(stat = \"identity\", fill = colores) +\n  labs(title = \"Top 10 Lenguajes de Programación para Personas de 18-24 años\",\n       x = \"Lenguajes de Programación\",\n       y = \"Número de Observaciones\") +\n  theme_minimal() +\n  theme(axis.title = element_blank(),\n        axis.text.x = element_text(size = 8, angle = 45, hjust = 1),\n        axis.text.y = element_text(size = 8),\n        plot.title = element_text(size = 12, face = \"bold\"),\n        plot.subtitle = element_text(size = 10)) +\n  labs(title = \"Lenguajes de programación con los que se inician los jóvenes\",\n       subtitle = \"medido en número de respuestas a la encuesta\",\n       caption = \"Fuente: encuesta anual de Stack Overflow\") +\n  guides(fill = FALSE) + # Eliminar la leyenda de la estética fill\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ndiez_mas_usados\n\n\n\n\n\n\n\n\n\n\n\n\n\nCódigo\n#Cargamos librerías\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(RColorBrewer)\n\ndf2 &lt;- df %&gt;%\n  filter(!is.na(LanguageHaveWorkedWith)) %&gt;%\n  group_by(Age, LanguageHaveWorkedWith) %&gt;%\n  summarise(Observaciones = n()) %&gt;%\n  group_by(Age) %&gt;%\n  top_n(1, Observaciones) %&gt;%\n  arrange(Age, desc(Observaciones)) %&gt;% \n  select(-Observaciones) %&gt;% \n  rename(lenguaje = LanguageHaveWorkedWith)\n\ndf_logos &lt;- data.frame(lenguaje = c(\"Python\", \"C\", \"C++\", \"Java\", \"C#\", \"JavaScript\", \"PHP\", \"Visual Basic\", \"SQL\", \"Assembly language\", \"Scratch\", \"Fortran\", \"Go\", \"MATLAB\", \"Kotlin\", \"Delphi/Object Pascal\", \"Swift\",\"Ruby\",\"R\",\"Rust\", \"Golang\"),\n                       logo = c(\"https://tse4.mm.bing.net/th?id=OIP.EDJ9xoErBbZqK2tExVoJfAAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&pid=Api&rs=1&c=1&qlt=95&w=103&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.ggb-3B-8LRfbgS0lPLYNxwHaIU&pid=Api&rs=1&c=1&qlt=95&w=105&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.dJ7A1hPb-BDRBrhOmhrVAgHaHa&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.2x1yN8k3MVCrkJFR_C5k-wHaIp&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.YPYdVAg5ieRspLI6HIpmDQHaIB&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.pkqphAig1t-PCsy4dkVrfAHaD5&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.Y224uoZnCs8yY0Sos_h4cQHaDd&pid=Api&rs=1&c=1&qlt=95&w=258&h=120\",\"https://tse4.mm.bing.net/th?id=OIP.S_9pgiKacbi3FxPKxDmusgHaFy&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.v5m2HW3FI3RbopnK8Cs6HgAAAA&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.bHt6sdtkwUqP91oPKlruGgHaEM&pid=Api&P=0&h=180\",\"https://tse2.explicit.bing.net/th?id=OIP.tLfIejOZiP_H0Zse0NIn2QAAAA&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.cI8KflTKlnmraGFa22XpKQHaEK&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.gW_YaXsZmuSntd_sy5zkIwHaHa&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.hEP7hOlvIzhKU1fGpizd7QAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.XozeB5BRQSzNCO6k7om62QHaHa&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.2BwE10YiTSXRrnW2LnVh8wHaHa&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.0rg-o4mEzLO5EHJ1zS52YwHaGe&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.YmPfYoQK3WvGEjFXusKV9QHaHa&pid=Api&P=0&h=180\", \"https://seeklogo.com/images/G/go-logo-046185B647-seeklogo.com.png\"))\ndf2_final &lt;- left_join(df2, df_logos, by = (\"lenguaje\"))\n#El data.frame daba problemas así que lo he rehecho con un poco de ayuda de R base.\nages &lt;- df2_final$Age\nlenguajes &lt;- df2_final$lenguaje\nlogos &lt;- df2_final$logo\ndataframef2_final &lt;- data.frame(ages, lenguajes, logos)\n\ngt_tbl &lt;- dataframef2_final %&gt;%\n  gt() %&gt;% \n  gtExtras::gt_theme_espn() %&gt;%\n  cols_width(\"lenguajes\" ~ px(100), \"logos\" ~ px(80)) %&gt;% \n  tab_header(title = \"Lenguajes de programación más populares por franjas de edad\",\n             subtitle = \"Según la encuesta anual de Stack Overflow.\")%&gt;%\n  gtExtras::gt_img_rows(columns = logos, img_source = 'web')\n\ngt_tbl\n\n\n\n\n\n\n  \n    \n    \n    \n  \n  \n    \n      Lenguajes de programación más populares por franjas de edad\n    \n    \n      Según la encuesta anual de Stack Overflow.\n    \n    \n      ages\n      lenguajes\n      logos\n    \n  \n  \n    18-24 years old\nJavaScript\n\n    25-34 years old\nJavaScript\n\n    35-44 years old\nJavaScript\n\n    45-54 years old\nJavaScript\n\n    55-64 years old\nSQL\n\n    65 years or older\nSQL\n\n    Prefer not to say\nJavaScript\n\n    Under 18 years old\nPython"
  },
  {
    "objectID": "my_slides_BigData.html#encuesta-stack-overflow-1",
    "href": "my_slides_BigData.html#encuesta-stack-overflow-1",
    "title": "Lenguajes de programación: evolución y programación en Economía",
    "section": "2. Encuesta Stack Overflow",
    "text": "2. Encuesta Stack Overflow\n\n¿Cómo se aprende programación?Lenguajes de programación con mayores salarios\n\n\n\n\nCódigo\nmy_ruta &lt;- here::here(\"datos\", \"survey_results_public.csv\")\ndf &lt;- rio::import(my_ruta)\ndf &lt;- df %&gt;% \n  select(LearnCode) %&gt;% \n  rename(learn=LearnCode) %&gt;% \n  separate_rows(learn, sep = \";\\\\s*\") %&gt;% \n  drop_na() %&gt;% \n  group_by(learn) %&gt;% \n  summarise(Observaciones = n()) %&gt;% \n  arrange(desc(Observaciones)) %&gt;% \n  filter(learn != \"Other (please specify):\")\n\ncolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\",\"#33FF99\", \"#FFCCFF\")\ngt_df &lt;- gt(df) %&gt;%\n  gtExtras::gt_plt_dot(column = \"Observaciones\", category_column = `learn`,  \n                       max_value = NULL, palette = colores) %&gt;%\n  gtExtras::gt_theme_nytimes() %&gt;%\n  cols_width(`learn` ~ px(400), 2 ~ px(150)) %&gt;% \n  tab_header(title = \"Maneras más usuales que se usan para aprender programación\",\n             subtitle = \"Según la encuesta anual de Stack Overflow.\")\ngt_df\n\n\n\n\n\n\n  \n    \n    \n  \n  \n    \n      Maneras más usuales que se usan para aprender programación\n    \n    \n      Según la encuesta anual de Stack Overflow.\n    \n    \n      learn\n      Observaciones\n    \n  \n  \n    \n  \n    Other online resources (e.g., videos, blogs, forum)\n    \n    \n  \n  \n    \n  \n\n70244\n    \n  \n    Books / Physical media\n    \n    \n  \n  \n    \n  \n\n45406\n    \n  \n    School (i.e., University, College, etc)\n    \n    \n  \n  \n    \n  \n\n43957\n    \n  \n    Online Courses or Certification\n    \n    \n  \n  \n    \n  \n\n43201\n    \n  \n    On the job training\n    \n    \n  \n  \n    \n  \n\n40380\n    \n  \n    Colleague\n    \n    \n  \n  \n    \n  \n\n20523\n    \n  \n    Friend or family member\n    \n    \n  \n  \n    \n  \n\n9936\n    \n  \n    Coding Bootcamp\n    \n    \n  \n  \n    \n  \n\n8602\n    \n  \n    Hackathons (virtual or in-person)\n    \n    \n  \n  \n    \n  \n\n7033\n  \n  \n  \n\n\n\n\n\n\n\n\nCódigo\nmy_ruta2 &lt;- here::here(\"datos\",\"lista_lenguajes_mejor_pagados.xlsx\")\naa &lt;- rio::import(my_ruta2)\naa &lt;- aa %&gt;% select(-\"Number of Jobs\")\ndf_logos &lt;- data.frame(lenguaje = c(\"Python\", \"C\", \"C++\", \"Java\", \"C#\", \"JavaScript\", \"PHP\", \"Visual Basic\", \"SQL\", \"Assembly language\", \"Scratch\", \"Fortran\", \"Go\", \"MATLAB\", \"Kotlin\", \"Delphi/Object Pascal\", \"Swift\",\"Ruby\",\"R\",\"Rust\", \"Golang\"),\n                       logo = c(\"https://tse4.mm.bing.net/th?id=OIP.EDJ9xoErBbZqK2tExVoJfAAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.bkbn2-K7c9rMBV5dvYXDrQHaIh&pid=Api&rs=1&c=1&qlt=95&w=103&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.ggb-3B-8LRfbgS0lPLYNxwHaIU&pid=Api&rs=1&c=1&qlt=95&w=105&h=118\",\"https://tse1.mm.bing.net/th?id=OIP.dJ7A1hPb-BDRBrhOmhrVAgHaHa&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.2x1yN8k3MVCrkJFR_C5k-wHaIp&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.YPYdVAg5ieRspLI6HIpmDQHaIB&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.pkqphAig1t-PCsy4dkVrfAHaD5&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.Y224uoZnCs8yY0Sos_h4cQHaDd&pid=Api&rs=1&c=1&qlt=95&w=258&h=120\",\"https://tse4.mm.bing.net/th?id=OIP.S_9pgiKacbi3FxPKxDmusgHaFy&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.v5m2HW3FI3RbopnK8Cs6HgAAAA&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.bHt6sdtkwUqP91oPKlruGgHaEM&pid=Api&P=0&h=180\",\"https://tse2.explicit.bing.net/th?id=OIP.tLfIejOZiP_H0Zse0NIn2QAAAA&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.7nKR4oRAhgtSbD97mDXWWgHaE8&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.cI8KflTKlnmraGFa22XpKQHaEK&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.gW_YaXsZmuSntd_sy5zkIwHaHa&pid=Api&P=0&h=180\",\"https://tse2.mm.bing.net/th?id=OIP.hEP7hOlvIzhKU1fGpizd7QAAAA&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.XozeB5BRQSzNCO6k7om62QHaHa&pid=Api&P=0&h=180\",\"https://tse1.mm.bing.net/th?id=OIP.2BwE10YiTSXRrnW2LnVh8wHaHa&pid=Api&P=0&h=180\",\"https://tse3.mm.bing.net/th?id=OIP.0rg-o4mEzLO5EHJ1zS52YwHaGe&pid=Api&P=0&h=180\",\"https://tse4.mm.bing.net/th?id=OIP.YmPfYoQK3WvGEjFXusKV9QHaHa&pid=Api&P=0&h=180\", \"https://seeklogo.com/images/G/go-logo-046185B647-seeklogo.com.png\"))\nmy_ruta2 &lt;- here::here(\"datos\",\"lista_lenguajes_mejor_pagados.xlsx\")\naa &lt;- rio::import(my_ruta2)\naa &lt;- aa %&gt;% select(-\"Number of Jobs\") %&gt;% \n  rename(lenguaje = Language)\ndf_final &lt;- left_join(aa, df_logos, by = (\"lenguaje\"))\n\ncolores &lt;- c(\"#3498db\", \"#2ecc71\", \"#e74c3c\", \"#f39c12\", \"#9b59b6\", \"#e67e22\", \"#1abc9c\",\"#33FF99\",\"#95a5a6\", \"#FFCCFF\")\n\ngt_salarios &lt;- gt(df_final) %&gt;%\n  gtExtras::gt_plt_dot(column = \"Median Salary ($)\", category_column = `lenguaje`,  \n                       max_value = NULL, palette = colores) %&gt;%\n  gtExtras::gt_theme_espn() %&gt;%\n  cols_width(`lenguaje` ~ px(400), 3 ~ px(80)) %&gt;% \n  tab_header(title = \"Lenguajes de programación con mejores salarios\",\n             subtitle = \"Según la web 4 day week.\") %&gt;%\n  gtExtras::gt_img_rows(columns = logo, img_source = 'web')\ngt_salarios\n\n\n\n\n\n\n  \n    \n    \n    \n  \n  \n    \n      Lenguajes de programación con mejores salarios\n    \n    \n      Según la web 4 day week.\n    \n    \n      lenguaje\n      Median Salary ($)\n      logo\n    \n  \n  \n    \n  \n    Swift\n    \n    \n  \n  \n    \n  \n\n116000\n\n    \n  \n    Python\n    \n    \n  \n  \n    \n  \n\n105000\n\n    \n  \n    Golang\n    \n    \n  \n  \n    \n  \n\n100000\n\n    \n  \n    C++\n    \n    \n  \n  \n    \n  \n\n100000\n\n    \n  \n    Java\n    \n    \n  \n  \n    \n  \n\n95000\n\n    \n  \n    Ruby\n    \n    \n  \n  \n    \n  \n\n95000\n\n    \n  \n    Rust\n    \n    \n  \n  \n    \n  \n\n88000\n\n    \n  \n    SQL\n    \n    \n  \n  \n    \n  \n\n85000"
  }
]